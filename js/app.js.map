{"version":3,"sources":["app.js","modules/contentFadeInScenes.js","modules/Video.js","modules/ScrollController.js","modules/Arrow.js","modules/GradientText.js","modules/InputField.js","modules/LogIn.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","buildContentFadeScenes","controller","sections","$","duration","stack","ScrollMagic","Controller","container","loglevel","debouncedAnimate","_","debounce","forEach","obj","delay","init","setTimeout","$el","addClass","removeClass","each","index","section","$section","offset","data","hasClass","Scene","triggerElement","triggerHook","on","e","scrollDirection","push","addTo","$dispatcher","isTouchDevice","document","DocumentTouch","Video","el","options","this","$container","extend","_defaults","videoId","videoPoster","$content","find","contentSelector","$closeBtn","closeBtnSelector","active","_initApi","_init","bind","value","_this","trigger","EVENTS","beforeOpen","_prevPos","top","window","scrollTop","height","outerHeight","$iframe","fadeIn","$poster","fadeOut","css","position","zIndex","width","left","animate","innerHeight","player","playVideo","afterOpen","_this2","beforeClose","pauseVideo","afterClose","_initPlayer","_setPoster","_this3","div","appendTo","YT","Player","events","onReady","_bindActions","readyClass","hide","url","backgroundImage","_this4","open","preventDefault","close","activeClass","openedClass","_listeners","_apiReady","_apiFetching","cb","arguments","undefined","script","createElement","src","head","appendChild","_onYouTubeIframeAPIReady","func","_oldCallback","onYouTubeIframeAPIReady","ScrollController","_instance","$root","disabled","scrollPos","_preventDefault","measureScrollbar","paddingRight","scrollBar","overflow","off","scrollDiv","style","append","scrollbarWidth","offsetWidth","clientWidth","removeChild","Arrow","params","DEFAULTS","s","Snap","paths","selectAll","_prepareForDrawing","shadow","_dropShadow","_params","easing","path","strokeDashoffset","_params2","items","slice","reverse","len","getTotalLength","attr","stroke","strokeDasharray","_params$shadowParams","shadowParams","dx","dy","blur","color","opacity","vb","offsetX","offsetY","_w","_h","shiftX","shiftY","viewBox","x","y","filter","select","transform","mina","easein","GradientText","_validateParams","DEFAULT_PARAMS","$text","textSelector","_createSvgElement","_updateSizes","snap","$svg","rawText","html","split","mask","text","fill","class","textClass","colorNormal","rect","normalColor","colorActive","fillOpacity","colorsGroup","group","_bindEvents","resize","createElementNS","_t","sizes","w","h","fontSize","parseFloat","lineHeight","_this5","_mouseListener","throttle","_ref","Error","magicValue","_sizes","lineHeightOffset","tspan","type","easeout","InputField","_this6","$input","$label","$border","_inputListener","val","trim","LogIn","_this7","$inputs","$loginInputsContainer","$loginEmailField","$loginPasswordField","$signupEmailField","$signupPasswordField","$helperBtn","inputs","state","signupPasswordDefaultCSS","parent","eq","setState","NORMAL_STATE","_passwordFieldListener","_helperBtnListener","_closeBtnListener","stopPropagation","FORGOT_PASSWORD_STATE","result","zxcvbn","score","targetState","loginScreen","scroll","show","disable","enable","setClassToggle","arrow","offsetHeight","draw","reset"],"mappings":"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","file":"app.js","sourcesContent":["(() => {\n\n    /**\n     * jQuery object for simple PubSub interface\n     */\n    const $dispatcher = $({});\n    const isTouchDevice = () =>\n        'ontouchstart' in document\n        ||'DocumentTouch' in document && document instanceof DocumentTouch;\n\n    if (isTouchDevice()) {\n        $('html').addClass('touch-device');\n    }\n\n    class Video {\n        constructor(el, options) {\n            this.$container = el instanceof $ ? el : $(el);\n            this.options = $.extend({}, options, Video._defaults);\n            this.videoId = this.options.videoId || this.$container.data('video-id');\n            this.videoPoster = this.options.videoPoster || this.$container.data('video-poster');\n            this.$content = this.$container.find(this.options.contentSelector);\n            this.$closeBtn = this.$container.find(this.options.closeBtnSelector);\n            this.active = false;\n            Video._initApi(this._init.bind(this));\n        }\n    \n        open() {\n            const { duration } = this.options;\n            $dispatcher && $dispatcher.trigger(Video.EVENTS.beforeOpen);\n            this._prevPos = {\n                top: this.$container.offset().top - $(window).scrollTop(),\n                height: this.$container.outerHeight()\n            };\n            this.$iframe.fadeIn(duration);\n            this.$poster.fadeOut(duration);\n            this.$container\n                .addClass('is-active')\n                .css({\n                    position: 'fixed',\n                    zIndex: '999',\n                    width: '100%',\n                    top: this._prevPos.top,\n                    left: 0\n                }).animate({\n                    top: 0,\n                    height: window.innerHeight\n                }, duration, () => {\n                    this.active = true;\n                    this.$container.addClass('is-opened');\n                    this.player.playVideo();\n                    $dispatcher && $dispatcher.trigger(Video.EVENTS.afterOpen);\n                });\n        }\n    \n        close() {\n            const { duration } = this.options;\n            const { top, height } = this._prevPos;\n            $dispatcher && $dispatcher.trigger(Video.EVENTS.beforeClose);\n            this.player.pauseVideo();\n            this.$iframe.fadeOut(duration);\n            this.$poster.fadeIn(duration);\n            this.$container\n                .removeClass('is-opened')\n                .animate({\n                    top,\n                    height\n                }, duration, () => {\n                    this.active = false;\n                    this.$container\n                        .removeClass('is-active')\n                        .css({\n                            position: '',\n                            zIndex: '',\n                            width: '',\n                            top: '',\n                            left: '',\n                            height: ''\n                        });\n                    $dispatcher && $dispatcher.trigger(Video.EVENTS.afterClose);\n                });\n        }\n    \n        _init() {\n            this._initPlayer();\n            this._setPoster();\n        }\n    \n        _initPlayer() {\n            const div = $('<div></div>').appendTo(this.$container);\n            this.player = new YT.Player(div[0], {\n                height: '100%',\n                width: '100%',\n                videoId: this.videoId,\n                events: {\n                    onReady: () => {\n                        this._bindActions();\n                        this.$container.addClass(this.options.readyClass);\n                    }\n                }\n            });\n            this.$iframe = this.$container.find('iframe').hide();\n        }\n    \n        _setPoster() {\n            const url = this.videoPoster || `http://img.youtube.com/vi/${this.videoId}/maxresdefault.jpg`\n            this.$poster = $('<div />')\n                .addClass('video-poster')\n                .css({\n                    backgroundImage: `url(${url})`\n                }).appendTo(this.$container);\n        }\n    \n        _bindActions() {\n            this.$container.on('click', () => {\n                if (!this.active) this.open();\n            });\n    \n            this.$closeBtn.on('click', (e) => {\n                e.preventDefault();\n                if (this.active) this.close();\n            });\n        }\n    }\n    \n    Video._defaults = {\n        duration: 500,\n        contentSelector: '.video-container__content',\n        closeBtnSelector: '.video-container__close',\n        readyClass: 'is-ready',\n        activeClass: 'is-active',\n        openedClass: 'is-opened'\n    };\n    \n    Video.EVENTS = {\n        beforeOpen: 'video:before-open',\n        afterOpen: 'video:after-open',\n        beforeClose: 'video:before-close',\n        afterClose: 'video:after-close'\n    };\n    Video._listeners = [];\n    Video._apiReady = false;\n    Video._apiFetching = false;\n    \n    Video._initApi = function(cb = () => {}) {\n        if (this._apiReady) return cb();\n        this._listeners.push(cb);\n    \n        if (this._apiFetching) return;\n    \n        const script = document.createElement('script');\n        script.src = 'https://www.youtube.com/iframe_api';\n        document.head.appendChild(script);\n        this._apiFetching = true;\n    };\n    \n    Video._onYouTubeIframeAPIReady = function() {\n        this._apiFetching = false;\n        this._apiReady = true;\n        this._listeners.forEach(func => func());\n        this._listeners = [];\n    };\n    \n    const _oldCallback = window.onYouTubeIframeAPIReady;\n    \n    window.onYouTubeIframeAPIReady = () => {\n        if (typeof _oldCallback === 'function') _oldCallback();\n        Video._onYouTubeIframeAPIReady();\n    };\n    \n    const ScrollController = (() => {\n        let _instance = null;\n    \n        class ScrollController {\n            constructor() {\n                this.$root = $('body');\n                this.disabled = false;\n                this.scrollPos = null;\n                this._preventDefault = this._preventDefault.bind(this);\n                this.measureScrollbar();\n            }\n    \n            _preventDefault(e) {\n                e.preventDefault();\n            }\n    \n            disable() {\n                if (this.disabled) return;\n                this.$root.on('wheel', this._preventDefault);\n                this.$root.addClass('scroll-disabled').css({\n                    paddingRight: this.scrollBar,\n                    overflow: 'hidden'\n                });\n                this.scrollPos = this.$root.scrollTop();\n                this.disabled = true;\n            }\n    \n            enable() {\n                if (!this.disabled) return;\n                this.$root.off('wheel', this._preventDefault);\n                this.$root.removeClass('scroll-disabled').css({\n                    paddingRight: '',\n                    overflow: ''\n                });\n                this.$root.scrollTop(this.scrollPos);\n                this.disabled = false;\n            }\n    \n            measureScrollbar() {\n                var scrollDiv = document.createElement('div');\n                scrollDiv.style.position = 'absolute';\n                scrollDiv.style.top = '-9999px';\n                scrollDiv.style.width = '50px';\n                scrollDiv.style.height = '50px';\n                scrollDiv.style.overflow = 'scroll';\n                this.$root.append(scrollDiv);\n                var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n                this.$root[0].removeChild(scrollDiv);\n                this.scrollBar = scrollbarWidth;\n            }\n        }\n    \n        return function() {\n            if (!_instance) {\n                _instance = new ScrollController();\n            }\n            return _instance;\n        };\n    })();\n    \n    class Arrow {\n        constructor(el, params) {\n            this.$el = el instanceof $ ? el : $(el);\n            this.params = $.extend(true, {}, Arrow.DEFAULTS, params);\n            this.s = Snap(this.$el.find('svg')[0]);\n            this.paths = this.s.selectAll('path');\n            this._prepareForDrawing();\n            if (this.params.shadow) this._dropShadow();\n            this.$el.data('arrow', this);\n        }\n    \n        draw() {\n            const { duration, easing } = this.params;\n            this.paths.forEach((path, i) => {\n                setTimeout(() => {\n                    path.animate({ strokeDashoffset: 0 }, duration, easing);\n                }, duration * i);\n            });\n        }\n    \n        reset() {\n            const { duration, easing } = this.params;\n            this.paths.items.slice().reverse().forEach((path, i) => {\n                const len = path.getTotalLength();\n                setTimeout(() => {\n                    path.animate({ strokeDashoffset: len }, duration, easing);\n                }, duration * i);\n            });\n        }\n    \n        _prepareForDrawing() {\n            this.s.attr('height', '');\n            this.paths.forEach(path => {\n                const len = path.getTotalLength();\n                path.attr({\n                    stroke: '#333',\n                    strokeDasharray: len,\n                    strokeDashoffset: len\n                });\n            });\n        }\n    \n        // _init(fragment) {\n        //     this.s = Snap(fragment.node);\n        //     this.paths = this.s.selectAll('path');\n        //     this._prepareForDrawing();\n        //     if (this.params.shadow) this._dropShadow();\n        //     this.s.appendTo(this.$el[0]);\n        //     console.log(this);\n        // }\n    \n        _dropShadow() {\n            const { dx, dy, blur, color, opacity } = this.params.shadowParams;\n            const vb = this.s.attr('viewBox');\n    \n            const offsetX = 2 * blur;\n            const offsetY = 2 * blur;\n            const _w      = vb.width + offsetX;\n            const _h      = vb.height + offsetY;\n            const shiftX  = dx >= blur ? 0 : blur - dx;\n            const shiftY  = dy >= blur ? 0 : blur - dy;\n    \n            this.s.attr({\n                viewBox: `${vb.x} ${vb.y} ${_w} ${_h}`,\n                width: _w\n            });\n    \n            this.shadow = this.s.filter(\n                Snap.filter.shadow(dx, dy, blur, color, opacity)\n            );\n    \n            this.s.select('g').attr({\n                transform: `translate(${shiftX} ${shiftY})`\n            });\n    \n            this.paths[0].attr({\n                filter: this.shadow\n            });\n        }\n    }\n    \n    Arrow.DEFAULTS = {\n        duration: 500,\n        easing: mina.easein,\n        shadow: true,\n        shadowParams: { dx: 0, dy: 20, blur: 10, color: 'black', opacity: 0.3 }\n    };\n    \n    function buildContentFadeScenes(controller) {\n        const sections = $('.fade-in');\n        const duration = 500;\n        const stack = [];\n    \n        if (controller == null ) {\n            controller = new ScrollMagic.Controller({\n                container: 'body',\n                loglevel: 2\n            });\n        }\n    \n        const debouncedAnimate = _.debounce(() => {\n            stack.forEach((obj, i) => {\n                let delay = 150 * i;\n                delay = delay > 450 ? 450 : delay;\n    \n                if (obj.init) return;\n    \n                obj.init = true;\n    \n                setTimeout(() => {\n                    obj.$el.addClass('animate');\n                }, delay);\n    \n                setTimeout(() => {\n                    obj.$el.removeClass('fade-in slide-up animate');\n                }, delay + duration);\n            });\n            stack.length = 0;\n        }, 100);\n    \n        sections.each((index, section) => {\n            const $section = $(section);\n            const offset = +$section.data('offset') || ($section.hasClass('slide-up') ? 100 : 50);\n    \n            const scene = new ScrollMagic.Scene({\n                offset,\n                triggerElement: section,\n                triggerHook: 'onEnter'\n            }).on('start', (e) => {\n                switch (e.scrollDirection) {\n                    case 'FORWARD':\n                    case 'PAUSED':\n                        stack.push({\n                            $el: $section,\n                            init: false\n                        });\n                        debouncedAnimate();\n                        break;\n                    case 'REVERSE':\n                        $section.addClass('fade-in slide-up');\n                        break;\n                }\n                // scene.destroy();\n            }).addTo(controller);\n        });\n    }\n    \n\n    /*\n     module GradientText was taken from main page and was adapted\n     for inner pages, without back compatibility\n     */\n    /**\n     * Originally created by AP on 20.03.16.\n     */\n    class GradientText {\n        constructor(el, params = {}) {\n            this._validateParams(params);\n            this.$container = el instanceof $ ? el : $(el);\n            this.params = $.extend(true, {}, GradientText.DEFAULT_PARAMS, params);\n            this.$text = this.$container.find(this.params.textSelector);\n    \n            this._createSvgElement();\n            this._updateSizes();\n    \n            this.snap = Snap(this.$svg[0]);\n            this.rawText = this.$text.html().split('<br>');\n            this.mask = this.snap.text(0, 0, this.rawText).attr({\n                fill: 'white',\n                'class': this.params.textClass\n            });\n    \n            this.colorNormal = this.snap.rect(0, 0, 10, 10).attr({\n                fill: this.params.normalColor\n            });\n            this.colorActive = this.snap.rect(0, 0, 10, 10).attr({\n                fill: 'l()#d82020-#ff5656-#e945ad',\n                fillOpacity: 0\n            });\n            this.colorsGroup = this.snap.group(this.colorNormal, this.colorActive).attr({\n                mask: this.mask\n            });\n    \n            this._bindEvents();\n            this.resize();\n            this.$container.addClass('is-ready');\n        }\n    \n        _createSvgElement() {\n            this.$svg = $(document.createElementNS('http://www.w3.org/2000/svg', 'svg'))\n                .css({\n                    position: 'absolute',\n                    top: 0,\n                    left: 0\n                })\n                .appendTo(this.$container);\n        }\n    \n        _updateSizes() {\n            const _t = this.$text;\n            this.sizes = {\n                w: _t.width(),\n                h: _t.height(),\n                fontSize: parseFloat(_t.css('font-size')),\n                lineHeight: parseFloat(_t.css('line-height'))\n            };\n        }\n    \n        _bindEvents() {\n            this.$container.on('mouseenter', (e) => {\n                this._mouseListener(e);\n            });\n            this.$container.on('mouseleave', (e) => {\n                this._mouseListener(e);\n            });\n            $(window).on('resize', _.throttle(() => {\n                this._updateSizes();\n                this.resize();\n            }, 300));\n        }\n    \n        _validateParams({ textSelector, textClass }) {\n            if (!textSelector && typeof textSelector !== 'string') {\n                throw new Error('\"textSelector\" must be a valid css selector string');\n            }\n            if (!textClass && typeof textClass !== 'string') {\n                throw new Error('\"textClass\" must be a valid css selector string');\n            }\n        }\n    \n        resize() {\n            const magicValue = 0.185;\n            const { w, h, fontSize } = this.sizes;\n            var lineHeightOffset = fontSize * magicValue;\n    \n            this.snap.attr({\n                viewBox: `0 0 ${w} ${h}`,\n                width: `${w}px`,\n                height: `${h}px`\n            });\n            this.mask.selectAll('tspan').forEach((tspan, i) => {\n                tspan.attr({\n                    x: 0,\n                    y: fontSize * ( i + 1 ) - lineHeightOffset\n                });\n            });\n            this.colorNormal.attr({\n                width: w,\n                height: h\n            });\n            this.colorActive.attr({\n                width: w,\n                height: h\n            });\n        }\n    \n        _mouseListener(e) {\n            const { duration } = this.params;\n            switch (e.type) {\n                case 'mouseenter':\n                    this.colorActive.animate({\n                        fillOpacity: 1\n                    }, duration, mina.easein);\n                    break;\n                case 'mouseleave':\n                    this.colorActive.animate({\n                        fillOpacity: 0\n                    }, duration, mina.easeout);\n                    break;\n            }\n        }\n    }\n    \n    GradientText.DEFAULT_PARAMS = {\n        normalColor: '#333333',\n        duration: 500\n    };\n    \n\n    /*\n     these two modules (InputField and LogIn)\n     are the same as on main page, nothing was changed\n     */\n    /**\n     * Created by AP on 25.04.16.\n     */\n    class InputField {\n        /**\n         *\n         * @param {jQuery} $container\n         */\n        constructor ($container) {\n            this.$container = $container;\n            this.$input = $container.find( 'input' );\n            this.$label = $container.find( 'label' );\n            this.$border = $container.find( '.border-line' );\n    \n    \n            this.$input.on( 'focusin', (e) => {\n                this._inputListener(e);\n            } );\n            this.$input.on( 'focusout', (e) => {\n                this._inputListener(e);\n            } );\n        }\n    \n        /**\n         *\n         * @param {jQuery.Event} e\n         * @private\n         */\n        _inputListener (e) {\n            switch (e.type) {\n                case 'focusin': {\n                    this.$label.addClass( 'minified' );\n                    this.$border.addClass( 'active' );\n                    break;\n                }\n                case 'focusout': {\n                    if (this.$input.val().trim().length == 0) {\n                        this.$label.removeClass('minified');\n                    }\n                    this.$border.removeClass( 'active' );\n                    break;\n                }\n            }\n        }\n    }\n    \n    /**\n     * Created by AP on 25.04.16.\n     */\n    class LogIn {\n        /**\n         *\n         * @param $container\n         */\n        constructor($container) {\n            this.$dispatcher = $({});\n            this.$container = $container;\n            this.$inputs = $container.find( '.input-field' );\n            this.$closeBtn = $container.find( '.close-btn' );\n            this.$loginInputsContainer = $container.find( '.mail-n-password' );\n            this.$loginEmailField = $container.find( '#login .input-field_email input' );\n            this.$loginPasswordField = $container.find( '#login .input-field_password input' );\n            this.$signupEmailField = $container.find( '#signup .input-field_email input' );\n            this.$signupPasswordField = $container.find( '#signup .input-field_password input' );\n            this.$helperBtn = $container.find( '.helper-btn' );\n    \n            /** @type {Array.<InputField>} */\n            this.inputs = [];\n    \n            /** @type {String} */\n            this.state = undefined;\n    \n            /** @type {String} */\n            this.signupPasswordDefaultCSS = this.$signupPasswordField.parent().attr('class');\n    \n    \n            var i;\n            for (i = 0; i < this.$inputs.length; i++) {\n                this.inputs.push( new InputField( this.$inputs.eq(i) ) );\n            }\n    \n            this.setState( LogIn.NORMAL_STATE );\n    \n            this.$signupPasswordField.on('input', (e) => {\n                this._passwordFieldListener(e);\n            } );\n            this.$helperBtn.on( 'click', (e) => {\n                this._helperBtnListener(e);\n            } );\n            this.$closeBtn.on( 'click', (e) => {\n                this._closeBtnListener(e);\n            } );\n            this.$container.on( 'mousewheel', (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n            } );\n        }\n    \n        /**\n         * Show component\n         */\n        show () {\n            $( 'body' ).addClass( 'log-in-state' );\n            this.$container.removeClass( 'hidden' );\n        }\n    \n        /**\n         * Hide component\n         */\n        hide () {\n            $( 'body' ).removeClass( 'log-in-state' );\n            this.$container.addClass( 'hidden' );\n        }\n    \n        setState (state) {\n            if (state == this.state) {\n                return;\n            }\n    \n            switch (state) {\n                case LogIn.NORMAL_STATE: {\n                    this.$loginInputsContainer.removeClass( 'recover-pswd-state' );\n                    this.$helperBtn.find( '.helper-btn__content_forgot' ).removeClass( 'hidden' );\n                    this.$helperBtn.find( '.helper-btn__content_back' ).addClass( 'hidden' );\n                    break;\n                }\n                case LogIn.FORGOT_PASSWORD_STATE: {\n                    this.$loginInputsContainer.addClass( 'recover-pswd-state' );\n                    this.$helperBtn.find( '.helper-btn__content_forgot' ).addClass( 'hidden' );\n                    this.$helperBtn.find( '.helper-btn__content_back' ).removeClass( 'hidden' );\n                    break;\n                }\n            }\n            this.state = state;\n        }\n    \n        /**\n         *\n         * @param {jQuery.Event} e\n         * @private\n         */\n        _passwordFieldListener (e) {\n            var result = zxcvbn( this.$signupPasswordField.val() );\n    \n            this.$signupPasswordField.parent().attr( {\n                'class': this.signupPasswordDefaultCSS + ' ' + 'strength_' + result.score\n            } );\n        }\n    \n        /**\n         *\n         * @param {jQuery.Event} e\n         * @private\n         */\n        _helperBtnListener (e) {\n            var targetState;\n    \n            if (this.state == LogIn.NORMAL_STATE) {\n                targetState = LogIn.FORGOT_PASSWORD_STATE;\n            } else if (this.state == LogIn.FORGOT_PASSWORD_STATE) {\n                targetState = LogIn.NORMAL_STATE;\n            }\n            this.setState( targetState );\n        }\n    \n        /**\n         *\n         * @param {jQuery.Event} e\n         * @private\n         */\n        _closeBtnListener (e) {\n            this.hide();\n        }\n    }\n    LogIn.NORMAL_STATE = 'normal_state';\n    LogIn.FORGOT_PASSWORD_STATE = 'forgot_password_state';\n    \n\n    const loginScreen = new LogIn($('.log-in'));\n    const scroll = ScrollController();\n    const controller = new ScrollMagic.Controller({ container: 'body' });\n\n    buildContentFadeScenes(controller);\n\n    $('.js-login, .js-register').on('click', (e) => {\n        e.preventDefault();\n        loginScreen.show();\n    });\n\n    $dispatcher.on(Video.EVENTS.beforeOpen, () => {\n        scroll.disable();\n    });\n\n    $dispatcher.on(Video.EVENTS.afterClose, () => {\n        scroll.enable();\n    });\n\n    $('.js-video').each((i, el) => new Video(el));\n    $('.js-gradient').each((i, el) => new GradientText(el, {\n        textSelector: 'h2',\n        textClass: 'h1-like'\n    }));\n\n    new ScrollMagic.Scene({\n        triggerElement: 'body',\n        triggerHook: 'onLeave',\n        offset: 50\n    }).setClassToggle('.header.header--mini', 'is-visible').addTo(controller);\n\n    $('.js-arrow').each((i, el) => {\n        const arrow = new Arrow(el);\n        new ScrollMagic.Scene({\n            triggerElement: el,\n            triggerHook: 'onEnter',\n            offset: el.offsetHeight\n        }).on('start', (e) => {\n            switch (e.scrollDirection) {\n                case 'PAUSED':\n                case 'FORWARD':\n                    arrow.draw();\n                    break;\n                case 'REVERSE':\n                    arrow.reset();\n                    break;\n            }\n        }).addTo(controller);\n    });\n\n})();\n","function buildContentFadeScenes(controller) {\n    const sections = $('.fade-in');\n    const duration = 500;\n    const stack = [];\n\n    if (controller == null ) {\n        controller = new ScrollMagic.Controller({\n            container: 'body',\n            loglevel: 2\n        });\n    }\n\n    const debouncedAnimate = _.debounce(() => {\n        stack.forEach((obj, i) => {\n            let delay = 150 * i;\n            delay = delay > 450 ? 450 : delay;\n\n            if (obj.init) return;\n\n            obj.init = true;\n\n            setTimeout(() => {\n                obj.$el.addClass('animate');\n            }, delay);\n\n            setTimeout(() => {\n                obj.$el.removeClass('fade-in slide-up animate');\n            }, delay + duration);\n        });\n        stack.length = 0;\n    }, 100);\n\n    sections.each((index, section) => {\n        const $section = $(section);\n        const offset = +$section.data('offset') || ($section.hasClass('slide-up') ? 100 : 50);\n\n        const scene = new ScrollMagic.Scene({\n            offset,\n            triggerElement: section,\n            triggerHook: 'onEnter'\n        }).on('start', (e) => {\n            switch (e.scrollDirection) {\n                case 'FORWARD':\n                case 'PAUSED':\n                    stack.push({\n                        $el: $section,\n                        init: false\n                    });\n                    debouncedAnimate();\n                    break;\n                case 'REVERSE':\n                    $section.addClass('fade-in slide-up');\n                    break;\n            }\n            // scene.destroy();\n        }).addTo(controller);\n    });\n}\n","class Video {\n    constructor(el, options) {\n        this.$container = el instanceof $ ? el : $(el);\n        this.options = $.extend({}, options, Video._defaults);\n        this.videoId = this.options.videoId || this.$container.data('video-id');\n        this.videoPoster = this.options.videoPoster || this.$container.data('video-poster');\n        this.$content = this.$container.find(this.options.contentSelector);\n        this.$closeBtn = this.$container.find(this.options.closeBtnSelector);\n        this.active = false;\n        Video._initApi(this._init.bind(this));\n    }\n\n    open() {\n        const { duration } = this.options;\n        $dispatcher && $dispatcher.trigger(Video.EVENTS.beforeOpen);\n        this._prevPos = {\n            top: this.$container.offset().top - $(window).scrollTop(),\n            height: this.$container.outerHeight()\n        };\n        this.$iframe.fadeIn(duration);\n        this.$poster.fadeOut(duration);\n        this.$container\n            .addClass('is-active')\n            .css({\n                position: 'fixed',\n                zIndex: '999',\n                width: '100%',\n                top: this._prevPos.top,\n                left: 0\n            }).animate({\n                top: 0,\n                height: window.innerHeight\n            }, duration, () => {\n                this.active = true;\n                this.$container.addClass('is-opened');\n                this.player.playVideo();\n                $dispatcher && $dispatcher.trigger(Video.EVENTS.afterOpen);\n            });\n    }\n\n    close() {\n        const { duration } = this.options;\n        const { top, height } = this._prevPos;\n        $dispatcher && $dispatcher.trigger(Video.EVENTS.beforeClose);\n        this.player.pauseVideo();\n        this.$iframe.fadeOut(duration);\n        this.$poster.fadeIn(duration);\n        this.$container\n            .removeClass('is-opened')\n            .animate({\n                top,\n                height\n            }, duration, () => {\n                this.active = false;\n                this.$container\n                    .removeClass('is-active')\n                    .css({\n                        position: '',\n                        zIndex: '',\n                        width: '',\n                        top: '',\n                        left: '',\n                        height: ''\n                    });\n                $dispatcher && $dispatcher.trigger(Video.EVENTS.afterClose);\n            });\n    }\n\n    _init() {\n        this._initPlayer();\n        this._setPoster();\n    }\n\n    _initPlayer() {\n        const div = $('<div></div>').appendTo(this.$container);\n        this.player = new YT.Player(div[0], {\n            height: '100%',\n            width: '100%',\n            videoId: this.videoId,\n            events: {\n                onReady: () => {\n                    this._bindActions();\n                    this.$container.addClass(this.options.readyClass);\n                }\n            }\n        });\n        this.$iframe = this.$container.find('iframe').hide();\n    }\n\n    _setPoster() {\n        const url = this.videoPoster || `http://img.youtube.com/vi/${this.videoId}/maxresdefault.jpg`\n        this.$poster = $('<div />')\n            .addClass('video-poster')\n            .css({\n                backgroundImage: `url(${url})`\n            }).appendTo(this.$container);\n    }\n\n    _bindActions() {\n        this.$container.on('click', () => {\n            if (!this.active) this.open();\n        });\n\n        this.$closeBtn.on('click', (e) => {\n            e.preventDefault();\n            if (this.active) this.close();\n        });\n    }\n}\n\nVideo._defaults = {\n    duration: 500,\n    contentSelector: '.video-container__content',\n    closeBtnSelector: '.video-container__close',\n    readyClass: 'is-ready',\n    activeClass: 'is-active',\n    openedClass: 'is-opened'\n};\n\nVideo.EVENTS = {\n    beforeOpen: 'video:before-open',\n    afterOpen: 'video:after-open',\n    beforeClose: 'video:before-close',\n    afterClose: 'video:after-close'\n};\nVideo._listeners = [];\nVideo._apiReady = false;\nVideo._apiFetching = false;\n\nVideo._initApi = function(cb = () => {}) {\n    if (this._apiReady) return cb();\n    this._listeners.push(cb);\n\n    if (this._apiFetching) return;\n\n    const script = document.createElement('script');\n    script.src = 'https://www.youtube.com/iframe_api';\n    document.head.appendChild(script);\n    this._apiFetching = true;\n};\n\nVideo._onYouTubeIframeAPIReady = function() {\n    this._apiFetching = false;\n    this._apiReady = true;\n    this._listeners.forEach(func => func());\n    this._listeners = [];\n};\n\nconst _oldCallback = window.onYouTubeIframeAPIReady;\n\nwindow.onYouTubeIframeAPIReady = () => {\n    if (typeof _oldCallback === 'function') _oldCallback();\n    Video._onYouTubeIframeAPIReady();\n};\n","const ScrollController = (() => {\n    let _instance = null;\n\n    class ScrollController {\n        constructor() {\n            this.$root = $('body');\n            this.disabled = false;\n            this.scrollPos = null;\n            this._preventDefault = this._preventDefault.bind(this);\n            this.measureScrollbar();\n        }\n\n        _preventDefault(e) {\n            e.preventDefault();\n        }\n\n        disable() {\n            if (this.disabled) return;\n            this.$root.on('wheel', this._preventDefault);\n            this.$root.addClass('scroll-disabled').css({\n                paddingRight: this.scrollBar,\n                overflow: 'hidden'\n            });\n            this.scrollPos = this.$root.scrollTop();\n            this.disabled = true;\n        }\n\n        enable() {\n            if (!this.disabled) return;\n            this.$root.off('wheel', this._preventDefault);\n            this.$root.removeClass('scroll-disabled').css({\n                paddingRight: '',\n                overflow: ''\n            });\n            this.$root.scrollTop(this.scrollPos);\n            this.disabled = false;\n        }\n\n        measureScrollbar() {\n            var scrollDiv = document.createElement('div');\n            scrollDiv.style.position = 'absolute';\n            scrollDiv.style.top = '-9999px';\n            scrollDiv.style.width = '50px';\n            scrollDiv.style.height = '50px';\n            scrollDiv.style.overflow = 'scroll';\n            this.$root.append(scrollDiv);\n            var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n            this.$root[0].removeChild(scrollDiv);\n            this.scrollBar = scrollbarWidth;\n        }\n    }\n\n    return function() {\n        if (!_instance) {\n            _instance = new ScrollController();\n        }\n        return _instance;\n    };\n})();\n","class Arrow {\n    constructor(el, params) {\n        this.$el = el instanceof $ ? el : $(el);\n        this.params = $.extend(true, {}, Arrow.DEFAULTS, params);\n        this.s = Snap(this.$el.find('svg')[0]);\n        this.paths = this.s.selectAll('path');\n        this._prepareForDrawing();\n        if (this.params.shadow) this._dropShadow();\n        this.$el.data('arrow', this);\n    }\n\n    draw() {\n        const { duration, easing } = this.params;\n        this.paths.forEach((path, i) => {\n            setTimeout(() => {\n                path.animate({ strokeDashoffset: 0 }, duration, easing);\n            }, duration * i);\n        });\n    }\n\n    reset() {\n        const { duration, easing } = this.params;\n        this.paths.items.slice().reverse().forEach((path, i) => {\n            const len = path.getTotalLength();\n            setTimeout(() => {\n                path.animate({ strokeDashoffset: len }, duration, easing);\n            }, duration * i);\n        });\n    }\n\n    _prepareForDrawing() {\n        this.s.attr('height', '');\n        this.paths.forEach(path => {\n            const len = path.getTotalLength();\n            path.attr({\n                stroke: '#333',\n                strokeDasharray: len,\n                strokeDashoffset: len\n            });\n        });\n    }\n\n    // _init(fragment) {\n    //     this.s = Snap(fragment.node);\n    //     this.paths = this.s.selectAll('path');\n    //     this._prepareForDrawing();\n    //     if (this.params.shadow) this._dropShadow();\n    //     this.s.appendTo(this.$el[0]);\n    //     console.log(this);\n    // }\n\n    _dropShadow() {\n        const { dx, dy, blur, color, opacity } = this.params.shadowParams;\n        const vb = this.s.attr('viewBox');\n\n        const offsetX = 2 * blur;\n        const offsetY = 2 * blur;\n        const _w      = vb.width + offsetX;\n        const _h      = vb.height + offsetY;\n        const shiftX  = dx >= blur ? 0 : blur - dx;\n        const shiftY  = dy >= blur ? 0 : blur - dy;\n\n        this.s.attr({\n            viewBox: `${vb.x} ${vb.y} ${_w} ${_h}`,\n            width: _w\n        });\n\n        this.shadow = this.s.filter(\n            Snap.filter.shadow(dx, dy, blur, color, opacity)\n        );\n\n        this.s.select('g').attr({\n            transform: `translate(${shiftX} ${shiftY})`\n        });\n\n        this.paths[0].attr({\n            filter: this.shadow\n        });\n    }\n}\n\nArrow.DEFAULTS = {\n    duration: 500,\n    easing: mina.easein,\n    shadow: true,\n    shadowParams: { dx: 0, dy: 20, blur: 10, color: 'black', opacity: 0.3 }\n};\n","/**\n * Originally created by AP on 20.03.16.\n */\nclass GradientText {\n    constructor(el, params = {}) {\n        this._validateParams(params);\n        this.$container = el instanceof $ ? el : $(el);\n        this.params = $.extend(true, {}, GradientText.DEFAULT_PARAMS, params);\n        this.$text = this.$container.find(this.params.textSelector);\n\n        this._createSvgElement();\n        this._updateSizes();\n\n        this.snap = Snap(this.$svg[0]);\n        this.rawText = this.$text.html().split('<br>');\n        this.mask = this.snap.text(0, 0, this.rawText).attr({\n            fill: 'white',\n            'class': this.params.textClass\n        });\n\n        this.colorNormal = this.snap.rect(0, 0, 10, 10).attr({\n            fill: this.params.normalColor\n        });\n        this.colorActive = this.snap.rect(0, 0, 10, 10).attr({\n            fill: 'l()#d82020-#ff5656-#e945ad',\n            fillOpacity: 0\n        });\n        this.colorsGroup = this.snap.group(this.colorNormal, this.colorActive).attr({\n            mask: this.mask\n        });\n\n        this._bindEvents();\n        this.resize();\n        this.$container.addClass('is-ready');\n    }\n\n    _createSvgElement() {\n        this.$svg = $(document.createElementNS('http://www.w3.org/2000/svg', 'svg'))\n            .css({\n                position: 'absolute',\n                top: 0,\n                left: 0\n            })\n            .appendTo(this.$container);\n    }\n\n    _updateSizes() {\n        const _t = this.$text;\n        this.sizes = {\n            w: _t.width(),\n            h: _t.height(),\n            fontSize: parseFloat(_t.css('font-size')),\n            lineHeight: parseFloat(_t.css('line-height'))\n        };\n    }\n\n    _bindEvents() {\n        this.$container.on('mouseenter', (e) => {\n            this._mouseListener(e);\n        });\n        this.$container.on('mouseleave', (e) => {\n            this._mouseListener(e);\n        });\n        $(window).on('resize', _.throttle(() => {\n            this._updateSizes();\n            this.resize();\n        }, 300));\n    }\n\n    _validateParams({ textSelector, textClass }) {\n        if (!textSelector && typeof textSelector !== 'string') {\n            throw new Error('\"textSelector\" must be a valid css selector string');\n        }\n        if (!textClass && typeof textClass !== 'string') {\n            throw new Error('\"textClass\" must be a valid css selector string');\n        }\n    }\n\n    resize() {\n        const magicValue = 0.185;\n        const { w, h, fontSize } = this.sizes;\n        var lineHeightOffset = fontSize * magicValue;\n\n        this.snap.attr({\n            viewBox: `0 0 ${w} ${h}`,\n            width: `${w}px`,\n            height: `${h}px`\n        });\n        this.mask.selectAll('tspan').forEach((tspan, i) => {\n            tspan.attr({\n                x: 0,\n                y: fontSize * ( i + 1 ) - lineHeightOffset\n            });\n        });\n        this.colorNormal.attr({\n            width: w,\n            height: h\n        });\n        this.colorActive.attr({\n            width: w,\n            height: h\n        });\n    }\n\n    _mouseListener(e) {\n        const { duration } = this.params;\n        switch (e.type) {\n            case 'mouseenter':\n                this.colorActive.animate({\n                    fillOpacity: 1\n                }, duration, mina.easein);\n                break;\n            case 'mouseleave':\n                this.colorActive.animate({\n                    fillOpacity: 0\n                }, duration, mina.easeout);\n                break;\n        }\n    }\n}\n\nGradientText.DEFAULT_PARAMS = {\n    normalColor: '#333333',\n    duration: 500\n};\n","/**\n * Created by AP on 25.04.16.\n */\nclass InputField {\n    /**\n     *\n     * @param {jQuery} $container\n     */\n    constructor ($container) {\n        this.$container = $container;\n        this.$input = $container.find( 'input' );\n        this.$label = $container.find( 'label' );\n        this.$border = $container.find( '.border-line' );\n\n\n        this.$input.on( 'focusin', (e) => {\n            this._inputListener(e);\n        } );\n        this.$input.on( 'focusout', (e) => {\n            this._inputListener(e);\n        } );\n    }\n\n    /**\n     *\n     * @param {jQuery.Event} e\n     * @private\n     */\n    _inputListener (e) {\n        switch (e.type) {\n            case 'focusin': {\n                this.$label.addClass( 'minified' );\n                this.$border.addClass( 'active' );\n                break;\n            }\n            case 'focusout': {\n                if (this.$input.val().trim().length == 0) {\n                    this.$label.removeClass('minified');\n                }\n                this.$border.removeClass( 'active' );\n                break;\n            }\n        }\n    }\n}\n","/**\n * Created by AP on 25.04.16.\n */\nclass LogIn {\n    /**\n     *\n     * @param $container\n     */\n    constructor($container) {\n        this.$dispatcher = $({});\n        this.$container = $container;\n        this.$inputs = $container.find( '.input-field' );\n        this.$closeBtn = $container.find( '.close-btn' );\n        this.$loginInputsContainer = $container.find( '.mail-n-password' );\n        this.$loginEmailField = $container.find( '#login .input-field_email input' );\n        this.$loginPasswordField = $container.find( '#login .input-field_password input' );\n        this.$signupEmailField = $container.find( '#signup .input-field_email input' );\n        this.$signupPasswordField = $container.find( '#signup .input-field_password input' );\n        this.$helperBtn = $container.find( '.helper-btn' );\n\n        /** @type {Array.<InputField>} */\n        this.inputs = [];\n\n        /** @type {String} */\n        this.state = undefined;\n\n        /** @type {String} */\n        this.signupPasswordDefaultCSS = this.$signupPasswordField.parent().attr('class');\n\n\n        var i;\n        for (i = 0; i < this.$inputs.length; i++) {\n            this.inputs.push( new InputField( this.$inputs.eq(i) ) );\n        }\n\n        this.setState( LogIn.NORMAL_STATE );\n\n        this.$signupPasswordField.on('input', (e) => {\n            this._passwordFieldListener(e);\n        } );\n        this.$helperBtn.on( 'click', (e) => {\n            this._helperBtnListener(e);\n        } );\n        this.$closeBtn.on( 'click', (e) => {\n            this._closeBtnListener(e);\n        } );\n        this.$container.on( 'mousewheel', (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n        } );\n    }\n\n    /**\n     * Show component\n     */\n    show () {\n        $( 'body' ).addClass( 'log-in-state' );\n        this.$container.removeClass( 'hidden' );\n    }\n\n    /**\n     * Hide component\n     */\n    hide () {\n        $( 'body' ).removeClass( 'log-in-state' );\n        this.$container.addClass( 'hidden' );\n    }\n\n    setState (state) {\n        if (state == this.state) {\n            return;\n        }\n\n        switch (state) {\n            case LogIn.NORMAL_STATE: {\n                this.$loginInputsContainer.removeClass( 'recover-pswd-state' );\n                this.$helperBtn.find( '.helper-btn__content_forgot' ).removeClass( 'hidden' );\n                this.$helperBtn.find( '.helper-btn__content_back' ).addClass( 'hidden' );\n                break;\n            }\n            case LogIn.FORGOT_PASSWORD_STATE: {\n                this.$loginInputsContainer.addClass( 'recover-pswd-state' );\n                this.$helperBtn.find( '.helper-btn__content_forgot' ).addClass( 'hidden' );\n                this.$helperBtn.find( '.helper-btn__content_back' ).removeClass( 'hidden' );\n                break;\n            }\n        }\n        this.state = state;\n    }\n\n    /**\n     *\n     * @param {jQuery.Event} e\n     * @private\n     */\n    _passwordFieldListener (e) {\n        var result = zxcvbn( this.$signupPasswordField.val() );\n\n        this.$signupPasswordField.parent().attr( {\n            'class': this.signupPasswordDefaultCSS + ' ' + 'strength_' + result.score\n        } );\n    }\n\n    /**\n     *\n     * @param {jQuery.Event} e\n     * @private\n     */\n    _helperBtnListener (e) {\n        var targetState;\n\n        if (this.state == LogIn.NORMAL_STATE) {\n            targetState = LogIn.FORGOT_PASSWORD_STATE;\n        } else if (this.state == LogIn.FORGOT_PASSWORD_STATE) {\n            targetState = LogIn.NORMAL_STATE;\n        }\n        this.setState( targetState );\n    }\n\n    /**\n     *\n     * @param {jQuery.Event} e\n     * @private\n     */\n    _closeBtnListener (e) {\n        this.hide();\n    }\n}\nLogIn.NORMAL_STATE = 'normal_state';\nLogIn.FORGOT_PASSWORD_STATE = 'forgot_password_state';\n"],"sourceRoot":"/source/"}