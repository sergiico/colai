{"version":3,"sources":["app.js","modules/Video.js","modules/ScrollController.js","modules/GradientText.js","modules/InputField.js","modules/LogIn.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(() => {\n\n    /**\n     * jQuery object for simple PubSub interface\n     */\n    const $dispatcher = $({});\n\n    class Video {\n        constructor(el, options) {\n            this.$container = el instanceof $ ? el : $(el);\n            this.options = $.extend({}, options, Video._defaults);\n            this.videoId = this.options.videoId || this.$container.data('video-id');\n            this.$content = this.$container.find(this.options.contentSelector);\n            this.$closeBtn = this.$container.find(this.options.closeBtnSelector);\n            this.active = false;\n            Video._initApi(this._init.bind(this));\n        }\n    \n        open() {\n            const { duration } = this.options;\n            $dispatcher && $dispatcher.trigger(Video.EVENTS.beforeOpen);\n            this._prevPos = {\n                top: this.$container.offset().top - $(window).scrollTop(),\n                height: this.$container.outerHeight()\n            };\n            this.$iframe.fadeIn(duration);\n            this.$poster.fadeOut(duration);\n            this.$container\n                .addClass('is-active')\n                .css({\n                    position: 'fixed',\n                    zIndex: '999',\n                    width: '100%',\n                    top: this._prevPos.top,\n                    left: 0\n                }).animate({\n                    top: 0,\n                    height: window.innerHeight\n                }, duration, () => {\n                    this.active = true;\n                    this.$container.addClass('is-opened');\n                    this.player.playVideo();\n                    $dispatcher && $dispatcher.trigger(Video.EVENTS.afterOpen);\n                });\n        }\n    \n        close() {\n            const { duration } = this.options;\n            const { top, height } = this._prevPos;\n            $dispatcher && $dispatcher.trigger(Video.EVENTS.beforeClose);\n            this.player.pauseVideo();\n            this.$iframe.fadeOut(duration);\n            this.$poster.fadeIn(duration);\n            this.$container\n                .removeClass('is-opened')\n                .animate({\n                    top,\n                    height\n                }, duration, () => {\n                    this.active = false;\n                    this.$container\n                        .removeClass('is-active')\n                        .css({\n                            position: '',\n                            zIndex: '',\n                            width: '',\n                            top: '',\n                            left: '',\n                            height: ''\n                        });\n                    $dispatcher && $dispatcher.trigger(Video.EVENTS.afterClose);\n                });\n        }\n    \n        _init() {\n            this._initPlayer();\n            this._setPoster();\n        }\n    \n        _initPlayer() {\n            const div = $('<div></div>').appendTo(this.$container);\n            this.player = new YT.Player(div[0], {\n                height: '100%',\n                width: '100%',\n                videoId: this.videoId,\n                events: {\n                    onReady: () => {\n                        this._bindActions();\n                        this.$container.addClass(this.options.readyClass);\n                    }\n                }\n            });\n            this.$iframe = this.$container.find('iframe').hide();\n        }\n    \n        _setPoster() {\n            this.$poster = $('<div />')\n                .addClass('video-poster')\n                .css({\n                    backgroundImage: `url(http://img.youtube.com/vi/${this.videoId}/maxresdefault.jpg)`\n                }).appendTo(this.$container);\n        }\n    \n        _bindActions() {\n            this.$container.on('click', () => {\n                if (!this.active) this.open();\n            });\n    \n            this.$closeBtn.on('click', (e) => {\n                e.preventDefault();\n                if (this.active) this.close();\n            });\n        }\n    }\n    \n    Video._defaults = {\n        duration: 500,\n        contentSelector: '.video-container__content',\n        closeBtnSelector: '.video-container__close',\n        readyClass: 'is-ready',\n        activeClass: 'is-active',\n        openedClass: 'is-opened'\n    };\n    \n    Video.EVENTS = {\n        beforeOpen: 'video:before-open',\n        afterOpen: 'video:after-open',\n        beforeClose: 'video:before-close',\n        afterClose: 'video:after-close'\n    };\n    Video._listeners = [];\n    Video._apiReady = false;\n    Video._apiFetching = false;\n    \n    Video._initApi = function(cb = () => {}) {\n        if (this._apiReady) return cb();\n        this._listeners.push(cb);\n    \n        if (this._apiFetching) return;\n    \n        const script = document.createElement('script');\n        script.src = 'https://www.youtube.com/iframe_api';\n        document.head.appendChild(script);\n        this._apiFetching = true;\n    };\n    \n    Video._onYouTubeIframeAPIReady = function() {\n        this._apiFetching = false;\n        this._apiReady = true;\n        this._listeners.forEach(func => func());\n        this._listeners = [];\n    };\n    \n    const _oldCallback = window.onYouTubeIframeAPIReady;\n    \n    window.onYouTubeIframeAPIReady = () => {\n        if (typeof _oldCallback === 'function') _oldCallback();\n        Video._onYouTubeIframeAPIReady();\n    };\n    \n    const ScrollController = (() => {\n        let _instance = null;\n    \n        class ScrollController {\n            constructor() {\n                this.$root = $('body');\n                this.disabled = false;\n                this.scrollPos = null;\n                this._preventDefault = this._preventDefault.bind(this);\n                this.measureScrollbar();\n            }\n    \n            _preventDefault(e) {\n                e.preventDefault();\n            }\n    \n            disable() {\n                if (this.disabled) return;\n                this.$root.on('wheel', this._preventDefault);\n                this.$root.addClass('scroll-disabled').css({\n                    paddingRight: this.scrollBar,\n                    overflow: 'hidden'\n                });\n                this.scrollPos = this.$root.scrollTop();\n                this.disabled = true;\n            }\n    \n            enable() {\n                if (!this.disabled) return;\n                this.$root.off('wheel', this._preventDefault);\n                this.$root.removeClass('scroll-disabled').css({\n                    paddingRight: '',\n                    overflow: ''\n                });\n                this.$root.scrollTop(this.scrollPos);\n                this.disabled = false;\n            }\n    \n            measureScrollbar() {\n                var scrollDiv = document.createElement('div');\n                scrollDiv.style.position = 'absolute';\n                scrollDiv.style.top = '-9999px';\n                scrollDiv.style.width = '50px';\n                scrollDiv.style.height = '50px';\n                scrollDiv.style.overflow = 'scroll';\n                this.$root.append(scrollDiv);\n                var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n                this.$root[0].removeChild(scrollDiv);\n                this.scrollBar = scrollbarWidth;\n            }\n        }\n    \n        return function() {\n            if (!_instance) {\n                _instance = new ScrollController();\n            }\n            return _instance;\n        };\n    })();\n    \n\n    /*\n     module GradientText was taken from main page and was adapted\n     for inner pages, without back compatibility\n     */\n    /**\n     * Originally created by AP on 20.03.16.\n     */\n    class GradientText {\n        constructor(el, params = {}) {\n            this._validateParams(params);\n            this.$container = el instanceof $ ? el : $(el);\n            this.params = $.extend(true, {}, GradientText.DEFAULT_PARAMS, params);\n            this.$text = this.$container.find(this.params.textSelector);\n    \n            this._createSvgElement();\n            this._updateSizes();\n    \n            this.snap = Snap(this.$svg[0]);\n            this.rawText = this.$text.html().split('<br>');\n            this.mask = this.snap.text(0, 0, this.rawText).attr({\n                fill: 'white',\n                'class': this.params.textClass\n            });\n    \n            this.colorNormal = this.snap.rect(0, 0, 10, 10).attr({\n                fill: this.params.normalColor\n            });\n            this.colorActive = this.snap.rect(0, 0, 10, 10).attr({\n                fill: 'l()#d82020-#ff5656-#e945ad',\n                fillOpacity: 0\n            });\n            this.colorsGroup = this.snap.group(this.colorNormal, this.colorActive).attr({\n                mask: this.mask\n            });\n    \n            this._bindEvents();\n            this.resize();\n            this.$container.addClass('is-ready');\n        }\n    \n        _createSvgElement() {\n            this.$svg = $(document.createElementNS('http://www.w3.org/2000/svg', 'svg'))\n                .css({\n                    position: 'absolute',\n                    top: 0,\n                    left: 0\n                })\n                .appendTo(this.$container);\n        }\n    \n        _updateSizes() {\n            const _t = this.$text;\n            this.sizes = {\n                w: _t.width(),\n                h: _t.height(),\n                fontSize: parseFloat(_t.css('font-size')),\n                lineHeight: parseFloat(_t.css('line-height'))\n            };\n        }\n    \n        _bindEvents() {\n            this.$container.on('mouseenter', (e) => {\n                this._mouseListener(e);\n            });\n            this.$container.on('mouseleave', (e) => {\n                this._mouseListener(e);\n            });\n            $(window).on('resize', _.throttle(() => {\n                this._updateSizes();\n                this.resize();\n            }, 300));\n        }\n    \n        _validateParams({ textSelector, textClass }) {\n            if (!textSelector && typeof textSelector !== 'string') {\n                throw new Error('\"textSelector\" must be a valid css selector string');\n            }\n            if (!textClass && typeof textClass !== 'string') {\n                throw new Error('\"textClass\" must be a valid css selector string');\n            }\n        }\n    \n        resize() {\n            const magicValue = 0.185;\n            const { w, h, fontSize } = this.sizes;\n            var lineHeightOffset = fontSize * magicValue;\n    \n            this.snap.attr({\n                viewBox: `0 0 ${w} ${h}`,\n                width: `${w}px`,\n                height: `${h}px`\n            });\n            this.mask.selectAll('tspan').forEach((tspan, i) => {\n                tspan.attr({\n                    x: 0,\n                    y: fontSize * ( i + 1 ) - lineHeightOffset\n                });\n            });\n            this.colorNormal.attr({\n                width: w,\n                height: h\n            });\n            this.colorActive.attr({\n                width: w,\n                height: h\n            });\n        }\n    \n        _mouseListener(e) {\n            const { duration } = this.params;\n            switch (e.type) {\n                case 'mouseenter':\n                    this.colorActive.animate({\n                        fillOpacity: 1\n                    }, duration, mina.easein);\n                    break;\n                case 'mouseleave':\n                    this.colorActive.animate({\n                        fillOpacity: 0\n                    }, duration, mina.easein);\n                    break;\n            }\n        }\n    }\n    \n    GradientText.DEFAULT_PARAMS = {\n        normalColor: '#333333',\n        duration: 500\n    };\n    \n\n    /*\n     these two modules (InputField and LogIn)\n     are the same as on main page, nothing was changed\n     */\n    /**\n     * Created by AP on 25.04.16.\n     */\n    class InputField {\n        /**\n         *\n         * @param {jQuery} $container\n         */\n        constructor ($container) {\n            this.$container = $container;\n            this.$input = $container.find( 'input' );\n            this.$label = $container.find( 'label' );\n            this.$border = $container.find( '.border-line' );\n    \n    \n            this.$input.on( 'focusin', (e) => {\n                this._inputListener(e);\n            } );\n            this.$input.on( 'focusout', (e) => {\n                this._inputListener(e);\n            } );\n        }\n    \n        /**\n         *\n         * @param {jQuery.Event} e\n         * @private\n         */\n        _inputListener (e) {\n            switch (e.type) {\n                case 'focusin': {\n                    this.$label.addClass( 'minified' );\n                    this.$border.addClass( 'active' );\n                    break;\n                }\n                case 'focusout': {\n                    if (this.$input.val().trim().length == 0) {\n                        this.$label.removeClass('minified');\n                    }\n                    this.$border.removeClass( 'active' );\n                    break;\n                }\n            }\n        }\n    }\n    \n    /**\n     * Created by AP on 25.04.16.\n     */\n    class LogIn {\n        /**\n         *\n         * @param $container\n         */\n        constructor($container) {\n            this.$dispatcher = $({});\n            this.$container = $container;\n            this.$inputs = $container.find( '.input-field' );\n            this.$closeBtn = $container.find( '.close-btn' );\n            this.$loginInputsContainer = $container.find( '.mail-n-password' );\n            this.$loginEmailField = $container.find( '#login .input-field_email input' );\n            this.$loginPasswordField = $container.find( '#login .input-field_password input' );\n            this.$signupEmailField = $container.find( '#signup .input-field_email input' );\n            this.$signupPasswordField = $container.find( '#signup .input-field_password input' );\n            this.$helperBtn = $container.find( '.helper-btn' );\n    \n            /** @type {Array.<InputField>} */\n            this.inputs = [];\n    \n            /** @type {String} */\n            this.state = undefined;\n    \n            /** @type {String} */\n            this.signupPasswordDefaultCSS = this.$signupPasswordField.parent().attr('class');\n    \n    \n            var i;\n            for (i = 0; i < this.$inputs.length; i++) {\n                this.inputs.push( new InputField( this.$inputs.eq(i) ) );\n            }\n    \n            this.setState( LogIn.NORMAL_STATE );\n    \n            this.$signupPasswordField.on('input', (e) => {\n                this._passwordFieldListener(e);\n            } );\n            this.$helperBtn.on( 'click', (e) => {\n                this._helperBtnListener(e);\n            } );\n            this.$closeBtn.on( 'click', (e) => {\n                this._closeBtnListener(e);\n            } );\n            this.$container.on( 'mousewheel', (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n            } );\n        }\n    \n        /**\n         * Show component\n         */\n        show () {\n            $( 'body' ).addClass( 'log-in-state' );\n            this.$container.removeClass( 'hidden' );\n        }\n    \n        /**\n         * Hide component\n         */\n        hide () {\n            $( 'body' ).removeClass( 'log-in-state' );\n            this.$container.addClass( 'hidden' );\n        }\n    \n        setState (state) {\n            if (state == this.state) {\n                return;\n            }\n    \n            switch (state) {\n                case LogIn.NORMAL_STATE: {\n                    this.$loginInputsContainer.removeClass( 'recover-pswd-state' );\n                    this.$helperBtn.find( '.helper-btn__content_forgot' ).removeClass( 'hidden' );\n                    this.$helperBtn.find( '.helper-btn__content_back' ).addClass( 'hidden' );\n                    break;\n                }\n                case LogIn.FORGOT_PASSWORD_STATE: {\n                    this.$loginInputsContainer.addClass( 'recover-pswd-state' );\n                    this.$helperBtn.find( '.helper-btn__content_forgot' ).addClass( 'hidden' );\n                    this.$helperBtn.find( '.helper-btn__content_back' ).removeClass( 'hidden' );\n                    break;\n                }\n            }\n            this.state = state;\n        }\n    \n        /**\n         *\n         * @param {jQuery.Event} e\n         * @private\n         */\n        _passwordFieldListener (e) {\n            var result = zxcvbn( this.$signupPasswordField.val() );\n    \n            this.$signupPasswordField.parent().attr( {\n                'class': this.signupPasswordDefaultCSS + ' ' + 'strength_' + result.score\n            } );\n        }\n    \n        /**\n         *\n         * @param {jQuery.Event} e\n         * @private\n         */\n        _helperBtnListener (e) {\n            var targetState;\n    \n            if (this.state == LogIn.NORMAL_STATE) {\n                targetState = LogIn.FORGOT_PASSWORD_STATE;\n            } else if (this.state == LogIn.FORGOT_PASSWORD_STATE) {\n                targetState = LogIn.NORMAL_STATE;\n            }\n            this.setState( targetState );\n        }\n    \n        /**\n         *\n         * @param {jQuery.Event} e\n         * @private\n         */\n        _closeBtnListener (e) {\n            this.hide();\n        }\n    }\n    LogIn.NORMAL_STATE = 'normal_state';\n    LogIn.FORGOT_PASSWORD_STATE = 'forgot_password_state';\n    \n\n    const loginScreen = new LogIn($('.log-in'));\n    const scroll = ScrollController();\n\n    $('#login-btn, #register-btn').on('click', (e) => {\n        e.preventDefault();\n        console.log(loginScreen);\n        loginScreen.show();\n    });\n\n    $dispatcher.on(Video.EVENTS.beforeOpen, () => {\n        scroll.disable();\n    });\n\n    $dispatcher.on(Video.EVENTS.afterClose, () => {\n        scroll.enable();\n    });\n\n    $('.js-video').each((i, el) => new Video(el));\n    $('.js-gradient').each((i, el) => new GradientText(el, {\n        textSelector: 'h2',\n        textClass: 'h1-like'\n    }));\n})();\n","class Video {\n    constructor(el, options) {\n        this.$container = el instanceof $ ? el : $(el);\n        this.options = $.extend({}, options, Video._defaults);\n        this.videoId = this.options.videoId || this.$container.data('video-id');\n        this.$content = this.$container.find(this.options.contentSelector);\n        this.$closeBtn = this.$container.find(this.options.closeBtnSelector);\n        this.active = false;\n        Video._initApi(this._init.bind(this));\n    }\n\n    open() {\n        const { duration } = this.options;\n        $dispatcher && $dispatcher.trigger(Video.EVENTS.beforeOpen);\n        this._prevPos = {\n            top: this.$container.offset().top - $(window).scrollTop(),\n            height: this.$container.outerHeight()\n        };\n        this.$iframe.fadeIn(duration);\n        this.$poster.fadeOut(duration);\n        this.$container\n            .addClass('is-active')\n            .css({\n                position: 'fixed',\n                zIndex: '999',\n                width: '100%',\n                top: this._prevPos.top,\n                left: 0\n            }).animate({\n                top: 0,\n                height: window.innerHeight\n            }, duration, () => {\n                this.active = true;\n                this.$container.addClass('is-opened');\n                this.player.playVideo();\n                $dispatcher && $dispatcher.trigger(Video.EVENTS.afterOpen);\n            });\n    }\n\n    close() {\n        const { duration } = this.options;\n        const { top, height } = this._prevPos;\n        $dispatcher && $dispatcher.trigger(Video.EVENTS.beforeClose);\n        this.player.pauseVideo();\n        this.$iframe.fadeOut(duration);\n        this.$poster.fadeIn(duration);\n        this.$container\n            .removeClass('is-opened')\n            .animate({\n                top,\n                height\n            }, duration, () => {\n                this.active = false;\n                this.$container\n                    .removeClass('is-active')\n                    .css({\n                        position: '',\n                        zIndex: '',\n                        width: '',\n                        top: '',\n                        left: '',\n                        height: ''\n                    });\n                $dispatcher && $dispatcher.trigger(Video.EVENTS.afterClose);\n            });\n    }\n\n    _init() {\n        this._initPlayer();\n        this._setPoster();\n    }\n\n    _initPlayer() {\n        const div = $('<div></div>').appendTo(this.$container);\n        this.player = new YT.Player(div[0], {\n            height: '100%',\n            width: '100%',\n            videoId: this.videoId,\n            events: {\n                onReady: () => {\n                    this._bindActions();\n                    this.$container.addClass(this.options.readyClass);\n                }\n            }\n        });\n        this.$iframe = this.$container.find('iframe').hide();\n    }\n\n    _setPoster() {\n        this.$poster = $('<div />')\n            .addClass('video-poster')\n            .css({\n                backgroundImage: `url(http://img.youtube.com/vi/${this.videoId}/maxresdefault.jpg)`\n            }).appendTo(this.$container);\n    }\n\n    _bindActions() {\n        this.$container.on('click', () => {\n            if (!this.active) this.open();\n        });\n\n        this.$closeBtn.on('click', (e) => {\n            e.preventDefault();\n            if (this.active) this.close();\n        });\n    }\n}\n\nVideo._defaults = {\n    duration: 500,\n    contentSelector: '.video-container__content',\n    closeBtnSelector: '.video-container__close',\n    readyClass: 'is-ready',\n    activeClass: 'is-active',\n    openedClass: 'is-opened'\n};\n\nVideo.EVENTS = {\n    beforeOpen: 'video:before-open',\n    afterOpen: 'video:after-open',\n    beforeClose: 'video:before-close',\n    afterClose: 'video:after-close'\n};\nVideo._listeners = [];\nVideo._apiReady = false;\nVideo._apiFetching = false;\n\nVideo._initApi = function(cb = () => {}) {\n    if (this._apiReady) return cb();\n    this._listeners.push(cb);\n\n    if (this._apiFetching) return;\n\n    const script = document.createElement('script');\n    script.src = 'https://www.youtube.com/iframe_api';\n    document.head.appendChild(script);\n    this._apiFetching = true;\n};\n\nVideo._onYouTubeIframeAPIReady = function() {\n    this._apiFetching = false;\n    this._apiReady = true;\n    this._listeners.forEach(func => func());\n    this._listeners = [];\n};\n\nconst _oldCallback = window.onYouTubeIframeAPIReady;\n\nwindow.onYouTubeIframeAPIReady = () => {\n    if (typeof _oldCallback === 'function') _oldCallback();\n    Video._onYouTubeIframeAPIReady();\n};\n","const ScrollController = (() => {\n    let _instance = null;\n\n    class ScrollController {\n        constructor() {\n            this.$root = $('body');\n            this.disabled = false;\n            this.scrollPos = null;\n            this._preventDefault = this._preventDefault.bind(this);\n            this.measureScrollbar();\n        }\n\n        _preventDefault(e) {\n            e.preventDefault();\n        }\n\n        disable() {\n            if (this.disabled) return;\n            this.$root.on('wheel', this._preventDefault);\n            this.$root.addClass('scroll-disabled').css({\n                paddingRight: this.scrollBar,\n                overflow: 'hidden'\n            });\n            this.scrollPos = this.$root.scrollTop();\n            this.disabled = true;\n        }\n\n        enable() {\n            if (!this.disabled) return;\n            this.$root.off('wheel', this._preventDefault);\n            this.$root.removeClass('scroll-disabled').css({\n                paddingRight: '',\n                overflow: ''\n            });\n            this.$root.scrollTop(this.scrollPos);\n            this.disabled = false;\n        }\n\n        measureScrollbar() {\n            var scrollDiv = document.createElement('div');\n            scrollDiv.style.position = 'absolute';\n            scrollDiv.style.top = '-9999px';\n            scrollDiv.style.width = '50px';\n            scrollDiv.style.height = '50px';\n            scrollDiv.style.overflow = 'scroll';\n            this.$root.append(scrollDiv);\n            var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n            this.$root[0].removeChild(scrollDiv);\n            this.scrollBar = scrollbarWidth;\n        }\n    }\n\n    return function() {\n        if (!_instance) {\n            _instance = new ScrollController();\n        }\n        return _instance;\n    };\n})();\n","/**\n * Originally created by AP on 20.03.16.\n */\nclass GradientText {\n    constructor(el, params = {}) {\n        this._validateParams(params);\n        this.$container = el instanceof $ ? el : $(el);\n        this.params = $.extend(true, {}, GradientText.DEFAULT_PARAMS, params);\n        this.$text = this.$container.find(this.params.textSelector);\n\n        this._createSvgElement();\n        this._updateSizes();\n\n        this.snap = Snap(this.$svg[0]);\n        this.rawText = this.$text.html().split('<br>');\n        this.mask = this.snap.text(0, 0, this.rawText).attr({\n            fill: 'white',\n            'class': this.params.textClass\n        });\n\n        this.colorNormal = this.snap.rect(0, 0, 10, 10).attr({\n            fill: this.params.normalColor\n        });\n        this.colorActive = this.snap.rect(0, 0, 10, 10).attr({\n            fill: 'l()#d82020-#ff5656-#e945ad',\n            fillOpacity: 0\n        });\n        this.colorsGroup = this.snap.group(this.colorNormal, this.colorActive).attr({\n            mask: this.mask\n        });\n\n        this._bindEvents();\n        this.resize();\n        this.$container.addClass('is-ready');\n    }\n\n    _createSvgElement() {\n        this.$svg = $(document.createElementNS('http://www.w3.org/2000/svg', 'svg'))\n            .css({\n                position: 'absolute',\n                top: 0,\n                left: 0\n            })\n            .appendTo(this.$container);\n    }\n\n    _updateSizes() {\n        const _t = this.$text;\n        this.sizes = {\n            w: _t.width(),\n            h: _t.height(),\n            fontSize: parseFloat(_t.css('font-size')),\n            lineHeight: parseFloat(_t.css('line-height'))\n        };\n    }\n\n    _bindEvents() {\n        this.$container.on('mouseenter', (e) => {\n            this._mouseListener(e);\n        });\n        this.$container.on('mouseleave', (e) => {\n            this._mouseListener(e);\n        });\n        $(window).on('resize', _.throttle(() => {\n            this._updateSizes();\n            this.resize();\n        }, 300));\n    }\n\n    _validateParams({ textSelector, textClass }) {\n        if (!textSelector && typeof textSelector !== 'string') {\n            throw new Error('\"textSelector\" must be a valid css selector string');\n        }\n        if (!textClass && typeof textClass !== 'string') {\n            throw new Error('\"textClass\" must be a valid css selector string');\n        }\n    }\n\n    resize() {\n        const magicValue = 0.185;\n        const { w, h, fontSize } = this.sizes;\n        var lineHeightOffset = fontSize * magicValue;\n\n        this.snap.attr({\n            viewBox: `0 0 ${w} ${h}`,\n            width: `${w}px`,\n            height: `${h}px`\n        });\n        this.mask.selectAll('tspan').forEach((tspan, i) => {\n            tspan.attr({\n                x: 0,\n                y: fontSize * ( i + 1 ) - lineHeightOffset\n            });\n        });\n        this.colorNormal.attr({\n            width: w,\n            height: h\n        });\n        this.colorActive.attr({\n            width: w,\n            height: h\n        });\n    }\n\n    _mouseListener(e) {\n        const { duration } = this.params;\n        switch (e.type) {\n            case 'mouseenter':\n                this.colorActive.animate({\n                    fillOpacity: 1\n                }, duration, mina.easein);\n                break;\n            case 'mouseleave':\n                this.colorActive.animate({\n                    fillOpacity: 0\n                }, duration, mina.easein);\n                break;\n        }\n    }\n}\n\nGradientText.DEFAULT_PARAMS = {\n    normalColor: '#333333',\n    duration: 500\n};\n","/**\n * Created by AP on 25.04.16.\n */\nclass InputField {\n    /**\n     *\n     * @param {jQuery} $container\n     */\n    constructor ($container) {\n        this.$container = $container;\n        this.$input = $container.find( 'input' );\n        this.$label = $container.find( 'label' );\n        this.$border = $container.find( '.border-line' );\n\n\n        this.$input.on( 'focusin', (e) => {\n            this._inputListener(e);\n        } );\n        this.$input.on( 'focusout', (e) => {\n            this._inputListener(e);\n        } );\n    }\n\n    /**\n     *\n     * @param {jQuery.Event} e\n     * @private\n     */\n    _inputListener (e) {\n        switch (e.type) {\n            case 'focusin': {\n                this.$label.addClass( 'minified' );\n                this.$border.addClass( 'active' );\n                break;\n            }\n            case 'focusout': {\n                if (this.$input.val().trim().length == 0) {\n                    this.$label.removeClass('minified');\n                }\n                this.$border.removeClass( 'active' );\n                break;\n            }\n        }\n    }\n}\n","/**\n * Created by AP on 25.04.16.\n */\nclass LogIn {\n    /**\n     *\n     * @param $container\n     */\n    constructor($container) {\n        this.$dispatcher = $({});\n        this.$container = $container;\n        this.$inputs = $container.find( '.input-field' );\n        this.$closeBtn = $container.find( '.close-btn' );\n        this.$loginInputsContainer = $container.find( '.mail-n-password' );\n        this.$loginEmailField = $container.find( '#login .input-field_email input' );\n        this.$loginPasswordField = $container.find( '#login .input-field_password input' );\n        this.$signupEmailField = $container.find( '#signup .input-field_email input' );\n        this.$signupPasswordField = $container.find( '#signup .input-field_password input' );\n        this.$helperBtn = $container.find( '.helper-btn' );\n\n        /** @type {Array.<InputField>} */\n        this.inputs = [];\n\n        /** @type {String} */\n        this.state = undefined;\n\n        /** @type {String} */\n        this.signupPasswordDefaultCSS = this.$signupPasswordField.parent().attr('class');\n\n\n        var i;\n        for (i = 0; i < this.$inputs.length; i++) {\n            this.inputs.push( new InputField( this.$inputs.eq(i) ) );\n        }\n\n        this.setState( LogIn.NORMAL_STATE );\n\n        this.$signupPasswordField.on('input', (e) => {\n            this._passwordFieldListener(e);\n        } );\n        this.$helperBtn.on( 'click', (e) => {\n            this._helperBtnListener(e);\n        } );\n        this.$closeBtn.on( 'click', (e) => {\n            this._closeBtnListener(e);\n        } );\n        this.$container.on( 'mousewheel', (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n        } );\n    }\n\n    /**\n     * Show component\n     */\n    show () {\n        $( 'body' ).addClass( 'log-in-state' );\n        this.$container.removeClass( 'hidden' );\n    }\n\n    /**\n     * Hide component\n     */\n    hide () {\n        $( 'body' ).removeClass( 'log-in-state' );\n        this.$container.addClass( 'hidden' );\n    }\n\n    setState (state) {\n        if (state == this.state) {\n            return;\n        }\n\n        switch (state) {\n            case LogIn.NORMAL_STATE: {\n                this.$loginInputsContainer.removeClass( 'recover-pswd-state' );\n                this.$helperBtn.find( '.helper-btn__content_forgot' ).removeClass( 'hidden' );\n                this.$helperBtn.find( '.helper-btn__content_back' ).addClass( 'hidden' );\n                break;\n            }\n            case LogIn.FORGOT_PASSWORD_STATE: {\n                this.$loginInputsContainer.addClass( 'recover-pswd-state' );\n                this.$helperBtn.find( '.helper-btn__content_forgot' ).addClass( 'hidden' );\n                this.$helperBtn.find( '.helper-btn__content_back' ).removeClass( 'hidden' );\n                break;\n            }\n        }\n        this.state = state;\n    }\n\n    /**\n     *\n     * @param {jQuery.Event} e\n     * @private\n     */\n    _passwordFieldListener (e) {\n        var result = zxcvbn( this.$signupPasswordField.val() );\n\n        this.$signupPasswordField.parent().attr( {\n            'class': this.signupPasswordDefaultCSS + ' ' + 'strength_' + result.score\n        } );\n    }\n\n    /**\n     *\n     * @param {jQuery.Event} e\n     * @private\n     */\n    _helperBtnListener (e) {\n        var targetState;\n\n        if (this.state == LogIn.NORMAL_STATE) {\n            targetState = LogIn.FORGOT_PASSWORD_STATE;\n        } else if (this.state == LogIn.FORGOT_PASSWORD_STATE) {\n            targetState = LogIn.NORMAL_STATE;\n        }\n        this.setState( targetState );\n    }\n\n    /**\n     *\n     * @param {jQuery.Event} e\n     * @private\n     */\n    _closeBtnListener (e) {\n        this.hide();\n    }\n}\nLogIn.NORMAL_STATE = 'normal_state';\nLogIn.FORGOT_PASSWORD_STATE = 'forgot_password_state';\n"],"sourceRoot":"/source/"}