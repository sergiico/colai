{"version":3,"sources":["app.js","modules/contentFadeInScenes.js","modules/Video.js","modules/ScrollController.js","modules/GradientText.js","modules/InputField.js","modules/LogIn.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","buildContentFadeScenes","controller","sections","$","duration","stack","ScrollMagic","Controller","container","loglevel","debouncedAnimate","_","debounce","forEach","obj","delay","init","setTimeout","$el","addClass","removeClass","each","index","section","$section","offset","hasClass","Scene","triggerElement","triggerHook","on","e","console","log","scrollDirection","push","addTo","$dispatcher","Video","el","options","this","$container","extend","_defaults","videoId","data","$content","find","contentSelector","$closeBtn","closeBtnSelector","active","_initApi","_init","bind","value","_this","trigger","EVENTS","beforeOpen","_prevPos","top","window","scrollTop","height","outerHeight","$iframe","fadeIn","$poster","fadeOut","css","position","zIndex","width","left","animate","innerHeight","player","playVideo","afterOpen","_this2","beforeClose","pauseVideo","afterClose","_initPlayer","_setPoster","_this3","div","appendTo","YT","Player","events","onReady","_bindActions","readyClass","hide","backgroundImage","_this4","open","preventDefault","close","activeClass","openedClass","_listeners","_apiReady","_apiFetching","cb","arguments","undefined","script","document","createElement","src","head","appendChild","_onYouTubeIframeAPIReady","func","_oldCallback","onYouTubeIframeAPIReady","ScrollController","_instance","$root","disabled","scrollPos","_preventDefault","measureScrollbar","paddingRight","scrollBar","overflow","off","scrollDiv","style","append","scrollbarWidth","offsetWidth","clientWidth","removeChild","GradientText","params","_validateParams","DEFAULT_PARAMS","$text","textSelector","_createSvgElement","_updateSizes","snap","Snap","$svg","rawText","html","split","mask","text","attr","fill","class","textClass","colorNormal","rect","normalColor","colorActive","fillOpacity","colorsGroup","group","_bindEvents","resize","createElementNS","_t","sizes","w","h","fontSize","parseFloat","lineHeight","_this5","_mouseListener","throttle","_ref","Error","magicValue","_sizes","lineHeightOffset","viewBox","selectAll","tspan","x","y","type","mina","easein","easeout","InputField","_this6","$input","$label","$border","_inputListener","val","trim","LogIn","_this7","$inputs","$loginInputsContainer","$loginEmailField","$loginPasswordField","$signupEmailField","$signupPasswordField","$helperBtn","inputs","state","signupPasswordDefaultCSS","parent","eq","setState","NORMAL_STATE","_passwordFieldListener","_helperBtnListener","_closeBtnListener","stopPropagation","FORGOT_PASSWORD_STATE","result","zxcvbn","score","targetState","loginScreen","scroll","show","disable","enable","setClassToggle"],"mappings":"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","file":"app.js","sourcesContent":["(() => {\n\n    /**\n     * jQuery object for simple PubSub interface\n     */\n    const $dispatcher = $({});\n\n    class Video {\n        constructor(el, options) {\n            this.$container = el instanceof $ ? el : $(el);\n            this.options = $.extend({}, options, Video._defaults);\n            this.videoId = this.options.videoId || this.$container.data('video-id');\n            this.$content = this.$container.find(this.options.contentSelector);\n            this.$closeBtn = this.$container.find(this.options.closeBtnSelector);\n            this.active = false;\n            Video._initApi(this._init.bind(this));\n        }\n    \n        open() {\n            const { duration } = this.options;\n            $dispatcher && $dispatcher.trigger(Video.EVENTS.beforeOpen);\n            this._prevPos = {\n                top: this.$container.offset().top - $(window).scrollTop(),\n                height: this.$container.outerHeight()\n            };\n            this.$iframe.fadeIn(duration);\n            this.$poster.fadeOut(duration);\n            this.$container\n                .addClass('is-active')\n                .css({\n                    position: 'fixed',\n                    zIndex: '999',\n                    width: '100%',\n                    top: this._prevPos.top,\n                    left: 0\n                }).animate({\n                    top: 0,\n                    height: window.innerHeight\n                }, duration, () => {\n                    this.active = true;\n                    this.$container.addClass('is-opened');\n                    this.player.playVideo();\n                    $dispatcher && $dispatcher.trigger(Video.EVENTS.afterOpen);\n                });\n        }\n    \n        close() {\n            const { duration } = this.options;\n            const { top, height } = this._prevPos;\n            $dispatcher && $dispatcher.trigger(Video.EVENTS.beforeClose);\n            this.player.pauseVideo();\n            this.$iframe.fadeOut(duration);\n            this.$poster.fadeIn(duration);\n            this.$container\n                .removeClass('is-opened')\n                .animate({\n                    top,\n                    height\n                }, duration, () => {\n                    this.active = false;\n                    this.$container\n                        .removeClass('is-active')\n                        .css({\n                            position: '',\n                            zIndex: '',\n                            width: '',\n                            top: '',\n                            left: '',\n                            height: ''\n                        });\n                    $dispatcher && $dispatcher.trigger(Video.EVENTS.afterClose);\n                });\n        }\n    \n        _init() {\n            this._initPlayer();\n            this._setPoster();\n        }\n    \n        _initPlayer() {\n            const div = $('<div></div>').appendTo(this.$container);\n            this.player = new YT.Player(div[0], {\n                height: '100%',\n                width: '100%',\n                videoId: this.videoId,\n                events: {\n                    onReady: () => {\n                        this._bindActions();\n                        this.$container.addClass(this.options.readyClass);\n                    }\n                }\n            });\n            this.$iframe = this.$container.find('iframe').hide();\n        }\n    \n        _setPoster() {\n            this.$poster = $('<div />')\n                .addClass('video-poster')\n                .css({\n                    backgroundImage: `url(http://img.youtube.com/vi/${this.videoId}/maxresdefault.jpg)`\n                }).appendTo(this.$container);\n        }\n    \n        _bindActions() {\n            this.$container.on('click', () => {\n                if (!this.active) this.open();\n            });\n    \n            this.$closeBtn.on('click', (e) => {\n                e.preventDefault();\n                if (this.active) this.close();\n            });\n        }\n    }\n    \n    Video._defaults = {\n        duration: 500,\n        contentSelector: '.video-container__content',\n        closeBtnSelector: '.video-container__close',\n        readyClass: 'is-ready',\n        activeClass: 'is-active',\n        openedClass: 'is-opened'\n    };\n    \n    Video.EVENTS = {\n        beforeOpen: 'video:before-open',\n        afterOpen: 'video:after-open',\n        beforeClose: 'video:before-close',\n        afterClose: 'video:after-close'\n    };\n    Video._listeners = [];\n    Video._apiReady = false;\n    Video._apiFetching = false;\n    \n    Video._initApi = function(cb = () => {}) {\n        if (this._apiReady) return cb();\n        this._listeners.push(cb);\n    \n        if (this._apiFetching) return;\n    \n        const script = document.createElement('script');\n        script.src = 'https://www.youtube.com/iframe_api';\n        document.head.appendChild(script);\n        this._apiFetching = true;\n    };\n    \n    Video._onYouTubeIframeAPIReady = function() {\n        this._apiFetching = false;\n        this._apiReady = true;\n        this._listeners.forEach(func => func());\n        this._listeners = [];\n    };\n    \n    const _oldCallback = window.onYouTubeIframeAPIReady;\n    \n    window.onYouTubeIframeAPIReady = () => {\n        if (typeof _oldCallback === 'function') _oldCallback();\n        Video._onYouTubeIframeAPIReady();\n    };\n    \n    const ScrollController = (() => {\n        let _instance = null;\n    \n        class ScrollController {\n            constructor() {\n                this.$root = $('body');\n                this.disabled = false;\n                this.scrollPos = null;\n                this._preventDefault = this._preventDefault.bind(this);\n                this.measureScrollbar();\n            }\n    \n            _preventDefault(e) {\n                e.preventDefault();\n            }\n    \n            disable() {\n                if (this.disabled) return;\n                this.$root.on('wheel', this._preventDefault);\n                this.$root.addClass('scroll-disabled').css({\n                    paddingRight: this.scrollBar,\n                    overflow: 'hidden'\n                });\n                this.scrollPos = this.$root.scrollTop();\n                this.disabled = true;\n            }\n    \n            enable() {\n                if (!this.disabled) return;\n                this.$root.off('wheel', this._preventDefault);\n                this.$root.removeClass('scroll-disabled').css({\n                    paddingRight: '',\n                    overflow: ''\n                });\n                this.$root.scrollTop(this.scrollPos);\n                this.disabled = false;\n            }\n    \n            measureScrollbar() {\n                var scrollDiv = document.createElement('div');\n                scrollDiv.style.position = 'absolute';\n                scrollDiv.style.top = '-9999px';\n                scrollDiv.style.width = '50px';\n                scrollDiv.style.height = '50px';\n                scrollDiv.style.overflow = 'scroll';\n                this.$root.append(scrollDiv);\n                var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n                this.$root[0].removeChild(scrollDiv);\n                this.scrollBar = scrollbarWidth;\n            }\n        }\n    \n        return function() {\n            if (!_instance) {\n                _instance = new ScrollController();\n            }\n            return _instance;\n        };\n    })();\n    \n    function buildContentFadeScenes(controller) {\n        const sections = $('.fade-in');\n        const duration = 500;\n        const stack = [];\n    \n        if (controller == null ) {\n            controller = new ScrollMagic.Controller({\n                container: 'body',\n                loglevel: 2\n            });\n        }\n    \n        const debouncedAnimate = _.debounce(() => {\n            stack.forEach((obj, i) => {\n                let delay = 150 * i;\n                delay = delay > 450 ? 450 : delay;\n    \n                if (obj.init) return;\n    \n                obj.init = true;\n    \n                setTimeout(() => {\n                    obj.$el.addClass('animate');\n                }, delay);\n    \n                setTimeout(() => {\n                    obj.$el.removeClass('fade-in slide-up animate');\n                }, delay + duration);\n            });\n            stack.length = 0;\n        }, 100);\n    \n        sections.each((index, section) => {\n            let $section = $(section);\n            let offset = $section.hasClass('slide-up') ? 100 : 50;\n    \n            let scene = new ScrollMagic.Scene({\n                offset,\n                triggerElement: section,\n                triggerHook: 'onEnter'\n            }).on('start', (e) => {\n                console.log(e.scrollDirection);\n                switch (e.scrollDirection) {\n                    case 'FORWARD':\n                    case 'PAUSED':\n                        stack.push({\n                            $el: $section,\n                            init: false\n                        });\n                        debouncedAnimate();\n                        break;\n                    case 'REVERSE':\n                        $section.addClass('fade-in slide-up');\n                        break;\n                }\n                // scene.destroy();\n            }).addTo(controller);\n        });\n    }\n    \n\n    /*\n     module GradientText was taken from main page and was adapted\n     for inner pages, without back compatibility\n     */\n    /**\n     * Originally created by AP on 20.03.16.\n     */\n    class GradientText {\n        constructor(el, params = {}) {\n            this._validateParams(params);\n            this.$container = el instanceof $ ? el : $(el);\n            this.params = $.extend(true, {}, GradientText.DEFAULT_PARAMS, params);\n            this.$text = this.$container.find(this.params.textSelector);\n    \n            this._createSvgElement();\n            this._updateSizes();\n    \n            this.snap = Snap(this.$svg[0]);\n            this.rawText = this.$text.html().split('<br>');\n            this.mask = this.snap.text(0, 0, this.rawText).attr({\n                fill: 'white',\n                'class': this.params.textClass\n            });\n    \n            this.colorNormal = this.snap.rect(0, 0, 10, 10).attr({\n                fill: this.params.normalColor\n            });\n            this.colorActive = this.snap.rect(0, 0, 10, 10).attr({\n                fill: 'l()#d82020-#ff5656-#e945ad',\n                fillOpacity: 0\n            });\n            this.colorsGroup = this.snap.group(this.colorNormal, this.colorActive).attr({\n                mask: this.mask\n            });\n    \n            this._bindEvents();\n            this.resize();\n            this.$container.addClass('is-ready');\n        }\n    \n        _createSvgElement() {\n            this.$svg = $(document.createElementNS('http://www.w3.org/2000/svg', 'svg'))\n                .css({\n                    position: 'absolute',\n                    top: 0,\n                    left: 0\n                })\n                .appendTo(this.$container);\n        }\n    \n        _updateSizes() {\n            const _t = this.$text;\n            this.sizes = {\n                w: _t.width(),\n                h: _t.height(),\n                fontSize: parseFloat(_t.css('font-size')),\n                lineHeight: parseFloat(_t.css('line-height'))\n            };\n        }\n    \n        _bindEvents() {\n            this.$container.on('mouseenter', (e) => {\n                this._mouseListener(e);\n            });\n            this.$container.on('mouseleave', (e) => {\n                this._mouseListener(e);\n            });\n            $(window).on('resize', _.throttle(() => {\n                this._updateSizes();\n                this.resize();\n            }, 300));\n        }\n    \n        _validateParams({ textSelector, textClass }) {\n            if (!textSelector && typeof textSelector !== 'string') {\n                throw new Error('\"textSelector\" must be a valid css selector string');\n            }\n            if (!textClass && typeof textClass !== 'string') {\n                throw new Error('\"textClass\" must be a valid css selector string');\n            }\n        }\n    \n        resize() {\n            const magicValue = 0.185;\n            const { w, h, fontSize } = this.sizes;\n            var lineHeightOffset = fontSize * magicValue;\n    \n            this.snap.attr({\n                viewBox: `0 0 ${w} ${h}`,\n                width: `${w}px`,\n                height: `${h}px`\n            });\n            this.mask.selectAll('tspan').forEach((tspan, i) => {\n                tspan.attr({\n                    x: 0,\n                    y: fontSize * ( i + 1 ) - lineHeightOffset\n                });\n            });\n            this.colorNormal.attr({\n                width: w,\n                height: h\n            });\n            this.colorActive.attr({\n                width: w,\n                height: h\n            });\n        }\n    \n        _mouseListener(e) {\n            const { duration } = this.params;\n            switch (e.type) {\n                case 'mouseenter':\n                    this.colorActive.animate({\n                        fillOpacity: 1\n                    }, duration, mina.easein);\n                    break;\n                case 'mouseleave':\n                    this.colorActive.animate({\n                        fillOpacity: 0\n                    }, duration, mina.easeout);\n                    break;\n            }\n        }\n    }\n    \n    GradientText.DEFAULT_PARAMS = {\n        normalColor: '#333333',\n        duration: 500\n    };\n    \n\n    /*\n     these two modules (InputField and LogIn)\n     are the same as on main page, nothing was changed\n     */\n    /**\n     * Created by AP on 25.04.16.\n     */\n    class InputField {\n        /**\n         *\n         * @param {jQuery} $container\n         */\n        constructor ($container) {\n            this.$container = $container;\n            this.$input = $container.find( 'input' );\n            this.$label = $container.find( 'label' );\n            this.$border = $container.find( '.border-line' );\n    \n    \n            this.$input.on( 'focusin', (e) => {\n                this._inputListener(e);\n            } );\n            this.$input.on( 'focusout', (e) => {\n                this._inputListener(e);\n            } );\n        }\n    \n        /**\n         *\n         * @param {jQuery.Event} e\n         * @private\n         */\n        _inputListener (e) {\n            switch (e.type) {\n                case 'focusin': {\n                    this.$label.addClass( 'minified' );\n                    this.$border.addClass( 'active' );\n                    break;\n                }\n                case 'focusout': {\n                    if (this.$input.val().trim().length == 0) {\n                        this.$label.removeClass('minified');\n                    }\n                    this.$border.removeClass( 'active' );\n                    break;\n                }\n            }\n        }\n    }\n    \n    /**\n     * Created by AP on 25.04.16.\n     */\n    class LogIn {\n        /**\n         *\n         * @param $container\n         */\n        constructor($container) {\n            this.$dispatcher = $({});\n            this.$container = $container;\n            this.$inputs = $container.find( '.input-field' );\n            this.$closeBtn = $container.find( '.close-btn' );\n            this.$loginInputsContainer = $container.find( '.mail-n-password' );\n            this.$loginEmailField = $container.find( '#login .input-field_email input' );\n            this.$loginPasswordField = $container.find( '#login .input-field_password input' );\n            this.$signupEmailField = $container.find( '#signup .input-field_email input' );\n            this.$signupPasswordField = $container.find( '#signup .input-field_password input' );\n            this.$helperBtn = $container.find( '.helper-btn' );\n    \n            /** @type {Array.<InputField>} */\n            this.inputs = [];\n    \n            /** @type {String} */\n            this.state = undefined;\n    \n            /** @type {String} */\n            this.signupPasswordDefaultCSS = this.$signupPasswordField.parent().attr('class');\n    \n    \n            var i;\n            for (i = 0; i < this.$inputs.length; i++) {\n                this.inputs.push( new InputField( this.$inputs.eq(i) ) );\n            }\n    \n            this.setState( LogIn.NORMAL_STATE );\n    \n            this.$signupPasswordField.on('input', (e) => {\n                this._passwordFieldListener(e);\n            } );\n            this.$helperBtn.on( 'click', (e) => {\n                this._helperBtnListener(e);\n            } );\n            this.$closeBtn.on( 'click', (e) => {\n                this._closeBtnListener(e);\n            } );\n            this.$container.on( 'mousewheel', (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n            } );\n        }\n    \n        /**\n         * Show component\n         */\n        show () {\n            $( 'body' ).addClass( 'log-in-state' );\n            this.$container.removeClass( 'hidden' );\n        }\n    \n        /**\n         * Hide component\n         */\n        hide () {\n            $( 'body' ).removeClass( 'log-in-state' );\n            this.$container.addClass( 'hidden' );\n        }\n    \n        setState (state) {\n            if (state == this.state) {\n                return;\n            }\n    \n            switch (state) {\n                case LogIn.NORMAL_STATE: {\n                    this.$loginInputsContainer.removeClass( 'recover-pswd-state' );\n                    this.$helperBtn.find( '.helper-btn__content_forgot' ).removeClass( 'hidden' );\n                    this.$helperBtn.find( '.helper-btn__content_back' ).addClass( 'hidden' );\n                    break;\n                }\n                case LogIn.FORGOT_PASSWORD_STATE: {\n                    this.$loginInputsContainer.addClass( 'recover-pswd-state' );\n                    this.$helperBtn.find( '.helper-btn__content_forgot' ).addClass( 'hidden' );\n                    this.$helperBtn.find( '.helper-btn__content_back' ).removeClass( 'hidden' );\n                    break;\n                }\n            }\n            this.state = state;\n        }\n    \n        /**\n         *\n         * @param {jQuery.Event} e\n         * @private\n         */\n        _passwordFieldListener (e) {\n            var result = zxcvbn( this.$signupPasswordField.val() );\n    \n            this.$signupPasswordField.parent().attr( {\n                'class': this.signupPasswordDefaultCSS + ' ' + 'strength_' + result.score\n            } );\n        }\n    \n        /**\n         *\n         * @param {jQuery.Event} e\n         * @private\n         */\n        _helperBtnListener (e) {\n            var targetState;\n    \n            if (this.state == LogIn.NORMAL_STATE) {\n                targetState = LogIn.FORGOT_PASSWORD_STATE;\n            } else if (this.state == LogIn.FORGOT_PASSWORD_STATE) {\n                targetState = LogIn.NORMAL_STATE;\n            }\n            this.setState( targetState );\n        }\n    \n        /**\n         *\n         * @param {jQuery.Event} e\n         * @private\n         */\n        _closeBtnListener (e) {\n            this.hide();\n        }\n    }\n    LogIn.NORMAL_STATE = 'normal_state';\n    LogIn.FORGOT_PASSWORD_STATE = 'forgot_password_state';\n    \n\n    const loginScreen = new LogIn($('.log-in'));\n    const scroll = ScrollController();\n    const controller = new ScrollMagic.Controller({ container: 'body' });\n\n    buildContentFadeScenes(controller);\n\n    $('.js-login, .js-register').on('click', (e) => {\n        e.preventDefault();\n        loginScreen.show();\n    });\n\n    $dispatcher.on(Video.EVENTS.beforeOpen, () => {\n        scroll.disable();\n    });\n\n    $dispatcher.on(Video.EVENTS.afterClose, () => {\n        scroll.enable();\n    });\n\n    $('.js-video').each((i, el) => new Video(el));\n    $('.js-gradient').each((i, el) => new GradientText(el, {\n        textSelector: 'h2',\n        textClass: 'h1-like'\n    }));\n\n    new ScrollMagic.Scene({\n        triggerElement: 'body',\n        triggerHook: 'onLeave',\n        offset: 50\n    }).setClassToggle('.header.header--mini', 'is-visible').addTo(controller);\n\n    function isElementInViewport(el) {\n        if (typeof jQuery === 'function' && el instanceof jQuery) {\n            el = el[0];\n        }\n        var rect = el.getBoundingClientRect();\n        return (\n            rect.top >= 0 &&\n            rect.left >= 0 &&\n            rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) &&\n            rect.right <= (window.innerWidth || document.documentElement.clientWidth)\n        );\n    }\n\n})();\n","function buildContentFadeScenes(controller) {\n    const sections = $('.fade-in');\n    const duration = 500;\n    const stack = [];\n\n    if (controller == null ) {\n        controller = new ScrollMagic.Controller({\n            container: 'body',\n            loglevel: 2\n        });\n    }\n\n    const debouncedAnimate = _.debounce(() => {\n        stack.forEach((obj, i) => {\n            let delay = 150 * i;\n            delay = delay > 450 ? 450 : delay;\n\n            if (obj.init) return;\n\n            obj.init = true;\n\n            setTimeout(() => {\n                obj.$el.addClass('animate');\n            }, delay);\n\n            setTimeout(() => {\n                obj.$el.removeClass('fade-in slide-up animate');\n            }, delay + duration);\n        });\n        stack.length = 0;\n    }, 100);\n\n    sections.each((index, section) => {\n        let $section = $(section);\n        let offset = $section.hasClass('slide-up') ? 100 : 50;\n\n        let scene = new ScrollMagic.Scene({\n            offset,\n            triggerElement: section,\n            triggerHook: 'onEnter'\n        }).on('start', (e) => {\n            console.log(e.scrollDirection);\n            switch (e.scrollDirection) {\n                case 'FORWARD':\n                case 'PAUSED':\n                    stack.push({\n                        $el: $section,\n                        init: false\n                    });\n                    debouncedAnimate();\n                    break;\n                case 'REVERSE':\n                    $section.addClass('fade-in slide-up');\n                    break;\n            }\n            // scene.destroy();\n        }).addTo(controller);\n    });\n}\n","class Video {\n    constructor(el, options) {\n        this.$container = el instanceof $ ? el : $(el);\n        this.options = $.extend({}, options, Video._defaults);\n        this.videoId = this.options.videoId || this.$container.data('video-id');\n        this.$content = this.$container.find(this.options.contentSelector);\n        this.$closeBtn = this.$container.find(this.options.closeBtnSelector);\n        this.active = false;\n        Video._initApi(this._init.bind(this));\n    }\n\n    open() {\n        const { duration } = this.options;\n        $dispatcher && $dispatcher.trigger(Video.EVENTS.beforeOpen);\n        this._prevPos = {\n            top: this.$container.offset().top - $(window).scrollTop(),\n            height: this.$container.outerHeight()\n        };\n        this.$iframe.fadeIn(duration);\n        this.$poster.fadeOut(duration);\n        this.$container\n            .addClass('is-active')\n            .css({\n                position: 'fixed',\n                zIndex: '999',\n                width: '100%',\n                top: this._prevPos.top,\n                left: 0\n            }).animate({\n                top: 0,\n                height: window.innerHeight\n            }, duration, () => {\n                this.active = true;\n                this.$container.addClass('is-opened');\n                this.player.playVideo();\n                $dispatcher && $dispatcher.trigger(Video.EVENTS.afterOpen);\n            });\n    }\n\n    close() {\n        const { duration } = this.options;\n        const { top, height } = this._prevPos;\n        $dispatcher && $dispatcher.trigger(Video.EVENTS.beforeClose);\n        this.player.pauseVideo();\n        this.$iframe.fadeOut(duration);\n        this.$poster.fadeIn(duration);\n        this.$container\n            .removeClass('is-opened')\n            .animate({\n                top,\n                height\n            }, duration, () => {\n                this.active = false;\n                this.$container\n                    .removeClass('is-active')\n                    .css({\n                        position: '',\n                        zIndex: '',\n                        width: '',\n                        top: '',\n                        left: '',\n                        height: ''\n                    });\n                $dispatcher && $dispatcher.trigger(Video.EVENTS.afterClose);\n            });\n    }\n\n    _init() {\n        this._initPlayer();\n        this._setPoster();\n    }\n\n    _initPlayer() {\n        const div = $('<div></div>').appendTo(this.$container);\n        this.player = new YT.Player(div[0], {\n            height: '100%',\n            width: '100%',\n            videoId: this.videoId,\n            events: {\n                onReady: () => {\n                    this._bindActions();\n                    this.$container.addClass(this.options.readyClass);\n                }\n            }\n        });\n        this.$iframe = this.$container.find('iframe').hide();\n    }\n\n    _setPoster() {\n        this.$poster = $('<div />')\n            .addClass('video-poster')\n            .css({\n                backgroundImage: `url(http://img.youtube.com/vi/${this.videoId}/maxresdefault.jpg)`\n            }).appendTo(this.$container);\n    }\n\n    _bindActions() {\n        this.$container.on('click', () => {\n            if (!this.active) this.open();\n        });\n\n        this.$closeBtn.on('click', (e) => {\n            e.preventDefault();\n            if (this.active) this.close();\n        });\n    }\n}\n\nVideo._defaults = {\n    duration: 500,\n    contentSelector: '.video-container__content',\n    closeBtnSelector: '.video-container__close',\n    readyClass: 'is-ready',\n    activeClass: 'is-active',\n    openedClass: 'is-opened'\n};\n\nVideo.EVENTS = {\n    beforeOpen: 'video:before-open',\n    afterOpen: 'video:after-open',\n    beforeClose: 'video:before-close',\n    afterClose: 'video:after-close'\n};\nVideo._listeners = [];\nVideo._apiReady = false;\nVideo._apiFetching = false;\n\nVideo._initApi = function(cb = () => {}) {\n    if (this._apiReady) return cb();\n    this._listeners.push(cb);\n\n    if (this._apiFetching) return;\n\n    const script = document.createElement('script');\n    script.src = 'https://www.youtube.com/iframe_api';\n    document.head.appendChild(script);\n    this._apiFetching = true;\n};\n\nVideo._onYouTubeIframeAPIReady = function() {\n    this._apiFetching = false;\n    this._apiReady = true;\n    this._listeners.forEach(func => func());\n    this._listeners = [];\n};\n\nconst _oldCallback = window.onYouTubeIframeAPIReady;\n\nwindow.onYouTubeIframeAPIReady = () => {\n    if (typeof _oldCallback === 'function') _oldCallback();\n    Video._onYouTubeIframeAPIReady();\n};\n","const ScrollController = (() => {\n    let _instance = null;\n\n    class ScrollController {\n        constructor() {\n            this.$root = $('body');\n            this.disabled = false;\n            this.scrollPos = null;\n            this._preventDefault = this._preventDefault.bind(this);\n            this.measureScrollbar();\n        }\n\n        _preventDefault(e) {\n            e.preventDefault();\n        }\n\n        disable() {\n            if (this.disabled) return;\n            this.$root.on('wheel', this._preventDefault);\n            this.$root.addClass('scroll-disabled').css({\n                paddingRight: this.scrollBar,\n                overflow: 'hidden'\n            });\n            this.scrollPos = this.$root.scrollTop();\n            this.disabled = true;\n        }\n\n        enable() {\n            if (!this.disabled) return;\n            this.$root.off('wheel', this._preventDefault);\n            this.$root.removeClass('scroll-disabled').css({\n                paddingRight: '',\n                overflow: ''\n            });\n            this.$root.scrollTop(this.scrollPos);\n            this.disabled = false;\n        }\n\n        measureScrollbar() {\n            var scrollDiv = document.createElement('div');\n            scrollDiv.style.position = 'absolute';\n            scrollDiv.style.top = '-9999px';\n            scrollDiv.style.width = '50px';\n            scrollDiv.style.height = '50px';\n            scrollDiv.style.overflow = 'scroll';\n            this.$root.append(scrollDiv);\n            var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n            this.$root[0].removeChild(scrollDiv);\n            this.scrollBar = scrollbarWidth;\n        }\n    }\n\n    return function() {\n        if (!_instance) {\n            _instance = new ScrollController();\n        }\n        return _instance;\n    };\n})();\n","/**\n * Originally created by AP on 20.03.16.\n */\nclass GradientText {\n    constructor(el, params = {}) {\n        this._validateParams(params);\n        this.$container = el instanceof $ ? el : $(el);\n        this.params = $.extend(true, {}, GradientText.DEFAULT_PARAMS, params);\n        this.$text = this.$container.find(this.params.textSelector);\n\n        this._createSvgElement();\n        this._updateSizes();\n\n        this.snap = Snap(this.$svg[0]);\n        this.rawText = this.$text.html().split('<br>');\n        this.mask = this.snap.text(0, 0, this.rawText).attr({\n            fill: 'white',\n            'class': this.params.textClass\n        });\n\n        this.colorNormal = this.snap.rect(0, 0, 10, 10).attr({\n            fill: this.params.normalColor\n        });\n        this.colorActive = this.snap.rect(0, 0, 10, 10).attr({\n            fill: 'l()#d82020-#ff5656-#e945ad',\n            fillOpacity: 0\n        });\n        this.colorsGroup = this.snap.group(this.colorNormal, this.colorActive).attr({\n            mask: this.mask\n        });\n\n        this._bindEvents();\n        this.resize();\n        this.$container.addClass('is-ready');\n    }\n\n    _createSvgElement() {\n        this.$svg = $(document.createElementNS('http://www.w3.org/2000/svg', 'svg'))\n            .css({\n                position: 'absolute',\n                top: 0,\n                left: 0\n            })\n            .appendTo(this.$container);\n    }\n\n    _updateSizes() {\n        const _t = this.$text;\n        this.sizes = {\n            w: _t.width(),\n            h: _t.height(),\n            fontSize: parseFloat(_t.css('font-size')),\n            lineHeight: parseFloat(_t.css('line-height'))\n        };\n    }\n\n    _bindEvents() {\n        this.$container.on('mouseenter', (e) => {\n            this._mouseListener(e);\n        });\n        this.$container.on('mouseleave', (e) => {\n            this._mouseListener(e);\n        });\n        $(window).on('resize', _.throttle(() => {\n            this._updateSizes();\n            this.resize();\n        }, 300));\n    }\n\n    _validateParams({ textSelector, textClass }) {\n        if (!textSelector && typeof textSelector !== 'string') {\n            throw new Error('\"textSelector\" must be a valid css selector string');\n        }\n        if (!textClass && typeof textClass !== 'string') {\n            throw new Error('\"textClass\" must be a valid css selector string');\n        }\n    }\n\n    resize() {\n        const magicValue = 0.185;\n        const { w, h, fontSize } = this.sizes;\n        var lineHeightOffset = fontSize * magicValue;\n\n        this.snap.attr({\n            viewBox: `0 0 ${w} ${h}`,\n            width: `${w}px`,\n            height: `${h}px`\n        });\n        this.mask.selectAll('tspan').forEach((tspan, i) => {\n            tspan.attr({\n                x: 0,\n                y: fontSize * ( i + 1 ) - lineHeightOffset\n            });\n        });\n        this.colorNormal.attr({\n            width: w,\n            height: h\n        });\n        this.colorActive.attr({\n            width: w,\n            height: h\n        });\n    }\n\n    _mouseListener(e) {\n        const { duration } = this.params;\n        switch (e.type) {\n            case 'mouseenter':\n                this.colorActive.animate({\n                    fillOpacity: 1\n                }, duration, mina.easein);\n                break;\n            case 'mouseleave':\n                this.colorActive.animate({\n                    fillOpacity: 0\n                }, duration, mina.easeout);\n                break;\n        }\n    }\n}\n\nGradientText.DEFAULT_PARAMS = {\n    normalColor: '#333333',\n    duration: 500\n};\n","/**\n * Created by AP on 25.04.16.\n */\nclass InputField {\n    /**\n     *\n     * @param {jQuery} $container\n     */\n    constructor ($container) {\n        this.$container = $container;\n        this.$input = $container.find( 'input' );\n        this.$label = $container.find( 'label' );\n        this.$border = $container.find( '.border-line' );\n\n\n        this.$input.on( 'focusin', (e) => {\n            this._inputListener(e);\n        } );\n        this.$input.on( 'focusout', (e) => {\n            this._inputListener(e);\n        } );\n    }\n\n    /**\n     *\n     * @param {jQuery.Event} e\n     * @private\n     */\n    _inputListener (e) {\n        switch (e.type) {\n            case 'focusin': {\n                this.$label.addClass( 'minified' );\n                this.$border.addClass( 'active' );\n                break;\n            }\n            case 'focusout': {\n                if (this.$input.val().trim().length == 0) {\n                    this.$label.removeClass('minified');\n                }\n                this.$border.removeClass( 'active' );\n                break;\n            }\n        }\n    }\n}\n","/**\n * Created by AP on 25.04.16.\n */\nclass LogIn {\n    /**\n     *\n     * @param $container\n     */\n    constructor($container) {\n        this.$dispatcher = $({});\n        this.$container = $container;\n        this.$inputs = $container.find( '.input-field' );\n        this.$closeBtn = $container.find( '.close-btn' );\n        this.$loginInputsContainer = $container.find( '.mail-n-password' );\n        this.$loginEmailField = $container.find( '#login .input-field_email input' );\n        this.$loginPasswordField = $container.find( '#login .input-field_password input' );\n        this.$signupEmailField = $container.find( '#signup .input-field_email input' );\n        this.$signupPasswordField = $container.find( '#signup .input-field_password input' );\n        this.$helperBtn = $container.find( '.helper-btn' );\n\n        /** @type {Array.<InputField>} */\n        this.inputs = [];\n\n        /** @type {String} */\n        this.state = undefined;\n\n        /** @type {String} */\n        this.signupPasswordDefaultCSS = this.$signupPasswordField.parent().attr('class');\n\n\n        var i;\n        for (i = 0; i < this.$inputs.length; i++) {\n            this.inputs.push( new InputField( this.$inputs.eq(i) ) );\n        }\n\n        this.setState( LogIn.NORMAL_STATE );\n\n        this.$signupPasswordField.on('input', (e) => {\n            this._passwordFieldListener(e);\n        } );\n        this.$helperBtn.on( 'click', (e) => {\n            this._helperBtnListener(e);\n        } );\n        this.$closeBtn.on( 'click', (e) => {\n            this._closeBtnListener(e);\n        } );\n        this.$container.on( 'mousewheel', (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n        } );\n    }\n\n    /**\n     * Show component\n     */\n    show () {\n        $( 'body' ).addClass( 'log-in-state' );\n        this.$container.removeClass( 'hidden' );\n    }\n\n    /**\n     * Hide component\n     */\n    hide () {\n        $( 'body' ).removeClass( 'log-in-state' );\n        this.$container.addClass( 'hidden' );\n    }\n\n    setState (state) {\n        if (state == this.state) {\n            return;\n        }\n\n        switch (state) {\n            case LogIn.NORMAL_STATE: {\n                this.$loginInputsContainer.removeClass( 'recover-pswd-state' );\n                this.$helperBtn.find( '.helper-btn__content_forgot' ).removeClass( 'hidden' );\n                this.$helperBtn.find( '.helper-btn__content_back' ).addClass( 'hidden' );\n                break;\n            }\n            case LogIn.FORGOT_PASSWORD_STATE: {\n                this.$loginInputsContainer.addClass( 'recover-pswd-state' );\n                this.$helperBtn.find( '.helper-btn__content_forgot' ).addClass( 'hidden' );\n                this.$helperBtn.find( '.helper-btn__content_back' ).removeClass( 'hidden' );\n                break;\n            }\n        }\n        this.state = state;\n    }\n\n    /**\n     *\n     * @param {jQuery.Event} e\n     * @private\n     */\n    _passwordFieldListener (e) {\n        var result = zxcvbn( this.$signupPasswordField.val() );\n\n        this.$signupPasswordField.parent().attr( {\n            'class': this.signupPasswordDefaultCSS + ' ' + 'strength_' + result.score\n        } );\n    }\n\n    /**\n     *\n     * @param {jQuery.Event} e\n     * @private\n     */\n    _helperBtnListener (e) {\n        var targetState;\n\n        if (this.state == LogIn.NORMAL_STATE) {\n            targetState = LogIn.FORGOT_PASSWORD_STATE;\n        } else if (this.state == LogIn.FORGOT_PASSWORD_STATE) {\n            targetState = LogIn.NORMAL_STATE;\n        }\n        this.setState( targetState );\n    }\n\n    /**\n     *\n     * @param {jQuery.Event} e\n     * @private\n     */\n    _closeBtnListener (e) {\n        this.hide();\n    }\n}\nLogIn.NORMAL_STATE = 'normal_state';\nLogIn.FORGOT_PASSWORD_STATE = 'forgot_password_state';\n"],"sourceRoot":"/source/"}