{"version":3,"sources":["app.js","modules/Video.js","modules/ScrollController.js","modules/GradientText.js","modules/InputField.js","modules/LogIn.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","$dispatcher","$","Video","el","options","this","$container","extend","_defaults","videoId","data","$content","find","contentSelector","$closeBtn","closeBtnSelector","active","_initApi","_init","bind","value","_this","duration","trigger","EVENTS","beforeOpen","_prevPos","top","offset","window","scrollTop","height","outerHeight","$iframe","fadeIn","$poster","fadeOut","addClass","css","position","zIndex","width","left","animate","innerHeight","player","playVideo","afterOpen","_this2","beforeClose","pauseVideo","removeClass","afterClose","_initPlayer","_setPoster","_this3","div","appendTo","YT","Player","events","onReady","_bindActions","readyClass","hide","backgroundImage","_this4","on","open","e","preventDefault","close","activeClass","openedClass","_listeners","_apiReady","_apiFetching","cb","arguments","undefined","push","script","document","createElement","src","head","appendChild","_onYouTubeIframeAPIReady","forEach","func","_oldCallback","onYouTubeIframeAPIReady","ScrollController","_instance","$root","disabled","scrollPos","_preventDefault","measureScrollbar","paddingRight","scrollBar","overflow","off","scrollDiv","style","append","scrollbarWidth","offsetWidth","clientWidth","removeChild","GradientText","params","_validateParams","DEFAULT_PARAMS","$text","textSelector","_createSvgElement","_updateSizes","snap","Snap","$svg","rawText","html","split","mask","text","attr","fill","class","textClass","colorNormal","rect","normalColor","colorActive","fillOpacity","colorsGroup","group","_bindEvents","resize","createElementNS","_t","sizes","w","h","fontSize","parseFloat","lineHeight","_this5","_mouseListener","_","throttle","_ref","Error","magicValue","_sizes","lineHeightOffset","viewBox","selectAll","tspan","x","y","type","mina","easein","easeout","InputField","_this6","$input","$label","$border","_inputListener","val","trim","LogIn","_this7","$inputs","$loginInputsContainer","$loginEmailField","$loginPasswordField","$signupEmailField","$signupPasswordField","$helperBtn","inputs","state","signupPasswordDefaultCSS","parent","eq","setState","NORMAL_STATE","_passwordFieldListener","_helperBtnListener","_closeBtnListener","stopPropagation","FORGOT_PASSWORD_STATE","result","zxcvbn","score","targetState","loginScreen","scroll","controller","ScrollMagic","Controller","container","show","disable","enable","each","Scene","triggerElement","triggerHook","setClassToggle","addTo"],"mappings":"AAAA,YAIA,SAASA,iBAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCAFhH,GAAIC,cAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeT,EAAQI,EAAWM,IAAKN,IAAiB,MAAO,UAAUR,EAAae,EAAYC,GAAiJ,MAA9HD,IAAYZ,EAAiBH,EAAYiB,UAAWF,GAAiBC,GAAab,EAAiBH,EAAagB,GAAqBhB,OAFhiB,WAKA,GAAAkB,GAAAC,MCLAC,EDAA,WCCA,QAAAA,GAAAC,EAAAC,GAAAxB,gBAAAyB,KAAAH,GACAG,KAAAC,WAAAH,YAAAF,GAAAE,EAAAF,EAAAE,GACAE,KAAAD,QAAAH,EAAAM,UAAAH,EAAAF,EAAAM,WACAH,KAAAI,QAAAJ,KAAAD,QAAAK,SAAAJ,KAAAC,WAAAI,KAAA,YACAL,KAAAM,SAAAN,KAAAC,WAAAM,KAAAP,KAAAD,QAAAS,iBACAR,KAAAS,UAAAT,KAAAC,WAAAM,KAAAP,KAAAD,QAAAW,kBACAV,KAAAW,QAAA,EACAd,EAAAe,SAAAZ,KAAAa,MAAAC,KAAAd,ODRA,MAAArB,cAAAkB,IAAAN,IAAA,OAAAwB,MAAA,WCWA,GAAAC,GAAAhB,KACAiB,EAAAjB,KAAAD,QAAAkB,QACAtB,IAAAA,EAAAuB,QAAArB,EAAAsB,OAAAC,YACApB,KAAAqB,UACAC,IAAAtB,KAAAC,WAAAsB,SAAAD,IAAA1B,EAAA4B,QAAAC,YACAC,OAAA1B,KAAAC,WAAA0B,eAEA3B,KAAA4B,QAAAC,OAAAZ,GACAjB,KAAA8B,QAAAC,QAAAd,GACAjB,KAAAC,WACA+B,SAAA,aACAC,KACAC,SAAA,QACAC,OAAA,MACAC,MAAA,OACAd,IAAAtB,KAAAqB,SAAAC,IACAe,KAAA,IACAC,SACAhB,IAAA,EACAI,OAAAF,OAAAe,aACAtB,EAAA,WACAD,EAAAL,QAAA,EACAK,EAAAf,WAAA+B,SAAA,aACAhB,EAAAwB,OAAAC,YACA9C,GAAAA,EAAAuB,QAAArB,EAAAsB,OAAAuB,gBDnCAnD,IAAA,QAAAwB,MAAA,WCuCA,GAAA4B,GAAA3C,KACAiB,EAAAjB,KAAAD,QAAAkB,SADAI,EAEArB,KAAAqB,SAAAC,EAFAD,EAEAC,IAAAI,EAFAL,EAEAK,MACA/B,IAAAA,EAAAuB,QAAArB,EAAAsB,OAAAyB,aACA5C,KAAAwC,OAAAK,aACA7C,KAAA4B,QAAAG,QAAAd,GACAjB,KAAA8B,QAAAD,OAAAZ,GACAjB,KAAAC,WACA6C,YAAA,aACAR,SACAhB,IAAAA,EACAI,OAAAA,GACAT,EAAA,WACA0B,EAAAhC,QAAA,EACAgC,EAAA1C,WACA6C,YAAA,aACAb,KACAC,SAAA,GACAC,OAAA,GACAC,MAAA,GACAd,IAAA,GACAe,KAAA,GACAX,OAAA,KAEA/B,GAAAA,EAAAuB,QAAArB,EAAAsB,OAAA4B,iBD/DAxD,IAAA,QAAAwB,MAAA,WCoEAf,KAAAgD,cACAhD,KAAAiD,gBDrEA1D,IAAA,cAAAwB,MAAA,WCwEA,GAAAmC,GAAAlD,KACAmD,EAAAvD,EAAA,eAAAwD,SAAApD,KAAAC,WACAD,MAAAwC,OAAA,GAAAa,IAAAC,OAAAH,EAAA,IACAzB,OAAA,OACAU,MAAA,OACAhC,QAAAJ,KAAAI,QACAmD,QACAC,QAAA,WACAN,EAAAO,eACAP,EAAAjD,WAAA+B,SAAAkB,EAAAnD,QAAA2D,gBAIA1D,KAAA4B,QAAA5B,KAAAC,WAAAM,KAAA,UAAAoD,UDrFApE,IAAA,aAAAwB,MAAA,WCyFAf,KAAA8B,QAAAlC,EAAA,WACAoC,SAAA,gBACAC,KACA2B,gBAAA,iCAAA5D,KAAAI,QAAA,wBACAgD,SAAApD,KAAAC,eD7FAV,IAAA,eAAAwB,MAAA,WCgGA,GAAA8C,GAAA7D,IACAA,MAAAC,WAAA6D,GAAA,QAAA,WACAD,EAAAlD,QAAAkD,EAAAE,SAGA/D,KAAAS,UAAAqD,GAAA,QAAA,SAAAE,GACAA,EAAAC,iBACAJ,EAAAlD,QAAAkD,EAAAK,cDvGArE,IC4GAA,GAAAM,WACAc,SAAA,IACAT,gBAAA,4BACAE,iBAAA,0BACAgD,WAAA,WACAS,YAAA,YACAC,YAAA,aAGAvE,EAAAsB,QACAC,WAAA,oBACAsB,UAAA,mBACAE,YAAA,qBACAG,WAAA,qBAEAlD,EAAAwE,cACAxE,EAAAyE,WAAA,EACAzE,EAAA0E,cAAA,EAEA1E,EAAAe,SAAA,WAAA,GAAA4D,GAAAC,UAAAzF,QAAA,GAAA0F,SAAAD,UAAA,GAAA,aAAAA,UAAA,EACA,IAAAzE,KAAAsE,UAAA,MAAAE,IAGA,IAFAxE,KAAAqE,WAAAM,KAAAH,IAEAxE,KAAAuE,aAAA,CAEA,GAAAK,GAAAC,SAAAC,cAAA,SACAF,GAAAG,IAAA,qCACAF,SAAAG,KAAAC,YAAAL,GACA5E,KAAAuE,cAAA,IAGA1E,EAAAqF,yBAAA,WACAlF,KAAAuE,cAAA,EACAvE,KAAAsE,WAAA,EACAtE,KAAAqE,WAAAc,QAAA,SAAAC,GAAA,MAAAA,OACApF,KAAAqE,cAGA,IAAAgB,GAAA7D,OAAA8D,uBAEA9D,QAAA8D,wBAAA,WACA,kBAAAD,IAAAA,IACAxF,EAAAqF,2BCtJA,IAAAK,GAAA,WACA,GAAAC,GAAA,KAEAD,EAHA,WAIA,QAAAA,KAAAhH,gBAAAyB,KAAAuF,GACAvF,KAAAyF,MAAA7F,EAAA,QACAI,KAAA0F,UAAA,EACA1F,KAAA2F,UAAA,KACA3F,KAAA4F,gBAAA5F,KAAA4F,gBAAA9E,KAAAd,MACAA,KAAA6F,mBATA,MAAAlH,cAAA4G,IAAAhG,IAAA,kBAAAwB,MAAA,SAYAiD,GACAA,EAAAC,oBAbA1E,IAAA,UAAAwB,MAAA,WAiBAf,KAAA0F,WACA1F,KAAAyF,MAAA3B,GAAA,QAAA9D,KAAA4F,iBACA5F,KAAAyF,MAAAzD,SAAA,mBAAAC,KACA6D,aAAA9F,KAAA+F,UACAC,SAAA,WAEAhG,KAAA2F,UAAA3F,KAAAyF,MAAAhE,YACAzB,KAAA0F,UAAA,MAxBAnG,IAAA,SAAAwB,MAAA,WA4BAf,KAAA0F,WACA1F,KAAAyF,MAAAQ,IAAA,QAAAjG,KAAA4F,iBACA5F,KAAAyF,MAAA3C,YAAA,mBAAAb,KACA6D,aAAA,GACAE,SAAA,KAEAhG,KAAAyF,MAAAhE,UAAAzB,KAAA2F,WACA3F,KAAA0F,UAAA,MAnCAnG,IAAA,mBAAAwB,MAAA,WAuCA,GAAAmF,GAAArB,SAAAC,cAAA,MACAoB,GAAAC,MAAAjE,SAAA,WACAgE,EAAAC,MAAA7E,IAAA,UACA4E,EAAAC,MAAA/D,MAAA,OACA8D,EAAAC,MAAAzE,OAAA,OACAwE,EAAAC,MAAAH,SAAA,SACAhG,KAAAyF,MAAAW,OAAAF,EACA,IAAAG,GAAAH,EAAAI,YAAAJ,EAAAK,WACAvG,MAAAyF,MAAA,GAAAe,YAAAN,GACAlG,KAAA+F,UAAAM,MAhDAd,IAoDA,OAAA,YAIA,MAHAC,KACAA,EAAA,GAAAD,IAEAC,MCrDAiB,EHHA,WGIA,QAAAA,GAAA3G,GAAA,GAAA4G,GAAAjC,UAAAzF,QAAA,GAAA0F,SAAAD,UAAA,MAAAA,UAAA,EAAAlG,iBAAAyB,KAAAyG,GACAzG,KAAA2G,gBAAAD,GACA1G,KAAAC,WAAAH,YAAAF,GAAAE,EAAAF,EAAAE,GACAE,KAAA0G,OAAA9G,EAAAM,QAAA,KAAAuG,EAAAG,eAAAF,GACA1G,KAAA6G,MAAA7G,KAAAC,WAAAM,KAAAP,KAAA0G,OAAAI,cAEA9G,KAAA+G,oBACA/G,KAAAgH,eAEAhH,KAAAiH,KAAAC,KAAAlH,KAAAmH,KAAA,IACAnH,KAAAoH,QAAApH,KAAA6G,MAAAQ,OAAAC,MAAA,QACAtH,KAAAuH,KAAAvH,KAAAiH,KAAAO,KAAA,EAAA,EAAAxH,KAAAoH,SAAAK,MACAC,KAAA,QACAC,QAAA3H,KAAA0G,OAAAkB,YAGA5H,KAAA6H,YAAA7H,KAAAiH,KAAAa,KAAA,EAAA,EAAA,GAAA,IAAAL,MACAC,KAAA1H,KAAA0G,OAAAqB,cAEA/H,KAAAgI,YAAAhI,KAAAiH,KAAAa,KAAA,EAAA,EAAA,GAAA,IAAAL,MACAC,KAAA,6BACAO,YAAA,IAEAjI,KAAAkI,YAAAlI,KAAAiH,KAAAkB,MAAAnI,KAAA6H,YAAA7H,KAAAgI,aAAAP,MACAF,KAAAvH,KAAAuH,OAGAvH,KAAAoI,cACApI,KAAAqI,SACArI,KAAAC,WAAA+B,SAAA,YHjCA,MAAArD,cAAA8H,IAAAlH,IAAA,oBAAAwB,MAAA,WGqCAf,KAAAmH,KAAAvH,EAAAiF,SAAAyD,gBAAA,6BAAA,QACArG,KACAC,SAAA,WACAZ,IAAA,EACAe,KAAA,IAEAe,SAAApD,KAAAC,eH3CAV,IAAA,eAAAwB,MAAA,WG+CA,GAAAwH,GAAAvI,KAAA6G,KACA7G,MAAAwI,OACAC,EAAAF,EAAAnG,QACAsG,EAAAH,EAAA7G,SACAiH,SAAAC,WAAAL,EAAAtG,IAAA,cACA4G,WAAAD,WAAAL,EAAAtG,IAAA,oBHpDA1C,IAAA,cAAAwB,MAAA,WGwDA,GAAA+H,GAAA9I,IACAA,MAAAC,WAAA6D,GAAA,aAAA,SAAAE,GACA8E,EAAAC,eAAA/E,KAEAhE,KAAAC,WAAA6D,GAAA,aAAA,SAAAE,GACA8E,EAAAC,eAAA/E,KAEApE,EAAA4B,QAAAsC,GAAA,SAAAkF,EAAAC,SAAA,WACAH,EAAA9B,eACA8B,EAAAT,UACA,SHlEA9I,IAAA,kBAAAwB,MAAA,SAAAmI,GGqEA,GAAApC,GAAAoC,EAAApC,aAAAc,EAAAsB,EAAAtB,SACA,KAAAd,GAAA,gBAAAA,GACA,KAAA,IAAAqC,OAAA,qDAEA,KAAAvB,GAAA,gBAAAA,GACA,KAAA,IAAAuB,OAAA,sDH1EA5J,IAAA,SAAAwB,MAAA,WG+EA,GAAAqI,GAAA,KADAC,EAEArJ,KAAAwI,MAAAC,EAFAY,EAEAZ,EAAAC,EAFAW,EAEAX,EAAAC,EAFAU,EAEAV,SACAW,EAAAX,EAAAS,CAEApJ,MAAAiH,KAAAQ,MACA8B,QAAA,OAAAd,EAAA,IAAAC,EACAtG,MAAAqG,EAAA,KACA/G,OAAAgH,EAAA,OAEA1I,KAAAuH,KAAAiC,UAAA,SAAArE,QAAA,SAAAsE,EAAA1K,GACA0K,EAAAhC,MACAiC,EAAA,EACAC,EAAAhB,GAAA5J,EAAA,GAAAuK,MAGAtJ,KAAA6H,YAAAJ,MACArF,MAAAqG,EACA/G,OAAAgH,IAEA1I,KAAAgI,YAAAP,MACArF,MAAAqG,EACA/G,OAAAgH,OHpGAnJ,IAAA,iBAAAwB,MAAA,SGwGAiD,GAAA,GACA/C,GAAAjB,KAAA0G,OAAAzF,QACA,QAAA+C,EAAA4F,MACA,IAAA,aACA5J,KAAAgI,YAAA1F,SACA2F,YAAA,GACAhH,EAAA4I,KAAAC,OACA,MACA,KAAA,aACA9J,KAAAgI,YAAA1F,SACA2F,YAAA,GACAhH,EAAA4I,KAAAE,cHnHAtD,IGyHAA,GAAAG,gBACAmB,YAAA,UACA9G,SAAA,IH3HA,IIGA+I,GJHA,WIQA,QAAAA,GAAA/J,GAAA,GAAAgK,GAAAjK,IAAAzB,iBAAAyB,KAAAgK,GACAhK,KAAAC,WAAAA,EACAD,KAAAkK,OAAAjK,EAAAM,KAAA,SACAP,KAAAmK,OAAAlK,EAAAM,KAAA,SACAP,KAAAoK,QAAAnK,EAAAM,KAAA,gBAGAP,KAAAkK,OAAApG,GAAA,UAAA,SAAAE,GACAiG,EAAAI,eAAArG,KAEAhE,KAAAkK,OAAApG,GAAA,WAAA,SAAAE,GACAiG,EAAAI,eAAArG,KJnBA,MAAArF,cAAAqL,IAAAzK,IAAA,iBAAAwB,MAAA,SI4BAiD,GACA,OAAAA,EAAA4F,MACA,IAAA,UACA5J,KAAAmK,OAAAnI,SAAA,YACAhC,KAAAoK,QAAApI,SAAA,SACA,MAEA,KAAA,WACA,GAAAhC,KAAAkK,OAAAI,MAAAC,OAAAvL,QACAgB,KAAAmK,OAAArH,YAAA,YAEA9C,KAAAoK,QAAAtH,YAAA,eJvCAkH,KKGAQ,ELHA,WKQA,QAAAA,GAAAvK,GAAA,GAAAwK,GAAAzK,IAAAzB,iBAAAyB,KAAAwK,GACAxK,KAAAL,YAAAC,MACAI,KAAAC,WAAAA,EACAD,KAAA0K,QAAAzK,EAAAM,KAAA,gBACAP,KAAAS,UAAAR,EAAAM,KAAA,cACAP,KAAA2K,sBAAA1K,EAAAM,KAAA,oBACAP,KAAA4K,iBAAA3K,EAAAM,KAAA,mCACAP,KAAA6K,oBAAA5K,EAAAM,KAAA,sCACAP,KAAA8K,kBAAA7K,EAAAM,KAAA,oCACAP,KAAA+K,qBAAA9K,EAAAM,KAAA,uCACAP,KAAAgL,WAAA/K,EAAAM,KAAA,eAGAP,KAAAiL,UAGAjL,KAAAkL,MAAAxG,OAGA1E,KAAAmL,yBAAAnL,KAAA+K,qBAAAK,SAAA3D,KAAA,QAGA,IAAA1I,EACA,KAAAA,EAAA,EAAAA,EAAAiB,KAAA0K,QAAA1L,OAAAD,IACAiB,KAAAiL,OAAAtG,KAAA,GAAAqF,GAAAhK,KAAA0K,QAAAW,GAAAtM,IAGAiB,MAAAsL,SAAAd,EAAAe,cAEAvL,KAAA+K,qBAAAjH,GAAA,QAAA,SAAAE,GACAyG,EAAAe,uBAAAxH,KAEAhE,KAAAgL,WAAAlH,GAAA,QAAA,SAAAE,GACAyG,EAAAgB,mBAAAzH,KAEAhE,KAAAS,UAAAqD,GAAA,QAAA,SAAAE,GACAyG,EAAAiB,kBAAA1H,KAEAhE,KAAAC,WAAA6D,GAAA,aAAA,SAAAE,GACAA,EAAAC,iBACAD,EAAA2H,oBLhDA,MAAAhN,cAAA6L,IAAAjL,IAAA,OAAAwB,MAAA,WKwDAnB,EAAA,QAAAoC,SAAA,gBACAhC,KAAAC,WAAA6C,YAAA,aLzDAvD,IAAA,OAAAwB,MAAA,WKgEAnB,EAAA,QAAAkD,YAAA,gBACA9C,KAAAC,WAAA+B,SAAA,aLjEAzC,IAAA,WAAAwB,MAAA,SKoEAmK,GACA,GAAAA,GAAAlL,KAAAkL,MAAA,CAIA,OAAAA,GACA,IAAAV,GAAAe,aACAvL,KAAA2K,sBAAA7H,YAAA,sBACA9C,KAAAgL,WAAAzK,KAAA,+BAAAuC,YAAA,UACA9C,KAAAgL,WAAAzK,KAAA,6BAAAyB,SAAA,SACA,MAEA,KAAAwI,GAAAoB,sBACA5L,KAAA2K,sBAAA3I,SAAA,sBACAhC,KAAAgL,WAAAzK,KAAA,+BAAAyB,SAAA,UACAhC,KAAAgL,WAAAzK,KAAA,6BAAAuC,YAAA,UAIA9C,KAAAkL,MAAAA,MLvFA3L,IAAA,yBAAAwB,MAAA,SK+FAiD,GACA,GAAA6H,GAAAC,OAAA9L,KAAA+K,qBAAAT,MAEAtK,MAAA+K,qBAAAK,SAAA3D,MACAE,QAAA3H,KAAAmL,yBAAA,aAAAU,EAAAE,WLnGAxM,IAAA,qBAAAwB,MAAA,SK4GAiD,GACA,GAAAgI,EAEAhM,MAAAkL,OAAAV,EAAAe,aACAS,EAAAxB,EAAAoB,sBACA5L,KAAAkL,OAAAV,EAAAoB,wBACAI,EAAAxB,EAAAe,cAEAvL,KAAAsL,SAAAU,MLpHAzM,IAAA,oBAAAwB,MAAA,SK4HAiD,GACAhE,KAAA2D,WL7HA6G,IKgIAA,GAAAe,aAAA,eACAf,EAAAoB,sBAAA,uBL1GA,IAAAK,GAAA,GAAAzB,GAAA5K,EAAA,YACAsM,EAAA3G,IACA4G,EAAA,GAAAC,aAAAC,YAAAC,UAAA,QAEA1M,GAAA,2BAAAkE,GAAA,QAAA,SAAAE,GACAA,EAAAC,iBACAgI,EAAAM,SAGA5M,EAAAmE,GAAAjE,EAAAsB,OAAAC,WAAA,WACA8K,EAAAM,YAGA7M,EAAAmE,GAAAjE,EAAAsB,OAAA4B,WAAA,WACAmJ,EAAAO,WAGA7M,EAAA,aAAA8M,KAAA,SAAA3N,EAAAe,GAAA,MAAA,IAAAD,GAAAC,KACAF,EAAA,gBAAA8M,KAAA,SAAA3N,EAAAe,GAAA,MAAA,IAAA2G,GAAA3G,GACAgH,aAAA,KACAc,UAAA,cAGA,GAAAwE,aAAAO,OACAC,eAAA,OACAC,YAAA,UACAtL,OAAA,KACAuL,eAAA,uBAAA,cAAAC,MAAAZ","file":"app.js","sourcesContent":["(() => {\n\n    /**\n     * jQuery object for simple PubSub interface\n     */\n    const $dispatcher = $({});\n\n    class Video {\n        constructor(el, options) {\n            this.$container = el instanceof $ ? el : $(el);\n            this.options = $.extend({}, options, Video._defaults);\n            this.videoId = this.options.videoId || this.$container.data('video-id');\n            this.$content = this.$container.find(this.options.contentSelector);\n            this.$closeBtn = this.$container.find(this.options.closeBtnSelector);\n            this.active = false;\n            Video._initApi(this._init.bind(this));\n        }\n    \n        open() {\n            const { duration } = this.options;\n            $dispatcher && $dispatcher.trigger(Video.EVENTS.beforeOpen);\n            this._prevPos = {\n                top: this.$container.offset().top - $(window).scrollTop(),\n                height: this.$container.outerHeight()\n            };\n            this.$iframe.fadeIn(duration);\n            this.$poster.fadeOut(duration);\n            this.$container\n                .addClass('is-active')\n                .css({\n                    position: 'fixed',\n                    zIndex: '999',\n                    width: '100%',\n                    top: this._prevPos.top,\n                    left: 0\n                }).animate({\n                    top: 0,\n                    height: window.innerHeight\n                }, duration, () => {\n                    this.active = true;\n                    this.$container.addClass('is-opened');\n                    this.player.playVideo();\n                    $dispatcher && $dispatcher.trigger(Video.EVENTS.afterOpen);\n                });\n        }\n    \n        close() {\n            const { duration } = this.options;\n            const { top, height } = this._prevPos;\n            $dispatcher && $dispatcher.trigger(Video.EVENTS.beforeClose);\n            this.player.pauseVideo();\n            this.$iframe.fadeOut(duration);\n            this.$poster.fadeIn(duration);\n            this.$container\n                .removeClass('is-opened')\n                .animate({\n                    top,\n                    height\n                }, duration, () => {\n                    this.active = false;\n                    this.$container\n                        .removeClass('is-active')\n                        .css({\n                            position: '',\n                            zIndex: '',\n                            width: '',\n                            top: '',\n                            left: '',\n                            height: ''\n                        });\n                    $dispatcher && $dispatcher.trigger(Video.EVENTS.afterClose);\n                });\n        }\n    \n        _init() {\n            this._initPlayer();\n            this._setPoster();\n        }\n    \n        _initPlayer() {\n            const div = $('<div></div>').appendTo(this.$container);\n            this.player = new YT.Player(div[0], {\n                height: '100%',\n                width: '100%',\n                videoId: this.videoId,\n                events: {\n                    onReady: () => {\n                        this._bindActions();\n                        this.$container.addClass(this.options.readyClass);\n                    }\n                }\n            });\n            this.$iframe = this.$container.find('iframe').hide();\n        }\n    \n        _setPoster() {\n            this.$poster = $('<div />')\n                .addClass('video-poster')\n                .css({\n                    backgroundImage: `url(http://img.youtube.com/vi/${this.videoId}/maxresdefault.jpg)`\n                }).appendTo(this.$container);\n        }\n    \n        _bindActions() {\n            this.$container.on('click', () => {\n                if (!this.active) this.open();\n            });\n    \n            this.$closeBtn.on('click', (e) => {\n                e.preventDefault();\n                if (this.active) this.close();\n            });\n        }\n    }\n    \n    Video._defaults = {\n        duration: 500,\n        contentSelector: '.video-container__content',\n        closeBtnSelector: '.video-container__close',\n        readyClass: 'is-ready',\n        activeClass: 'is-active',\n        openedClass: 'is-opened'\n    };\n    \n    Video.EVENTS = {\n        beforeOpen: 'video:before-open',\n        afterOpen: 'video:after-open',\n        beforeClose: 'video:before-close',\n        afterClose: 'video:after-close'\n    };\n    Video._listeners = [];\n    Video._apiReady = false;\n    Video._apiFetching = false;\n    \n    Video._initApi = function(cb = () => {}) {\n        if (this._apiReady) return cb();\n        this._listeners.push(cb);\n    \n        if (this._apiFetching) return;\n    \n        const script = document.createElement('script');\n        script.src = 'https://www.youtube.com/iframe_api';\n        document.head.appendChild(script);\n        this._apiFetching = true;\n    };\n    \n    Video._onYouTubeIframeAPIReady = function() {\n        this._apiFetching = false;\n        this._apiReady = true;\n        this._listeners.forEach(func => func());\n        this._listeners = [];\n    };\n    \n    const _oldCallback = window.onYouTubeIframeAPIReady;\n    \n    window.onYouTubeIframeAPIReady = () => {\n        if (typeof _oldCallback === 'function') _oldCallback();\n        Video._onYouTubeIframeAPIReady();\n    };\n    \n    const ScrollController = (() => {\n        let _instance = null;\n    \n        class ScrollController {\n            constructor() {\n                this.$root = $('body');\n                this.disabled = false;\n                this.scrollPos = null;\n                this._preventDefault = this._preventDefault.bind(this);\n                this.measureScrollbar();\n            }\n    \n            _preventDefault(e) {\n                e.preventDefault();\n            }\n    \n            disable() {\n                if (this.disabled) return;\n                this.$root.on('wheel', this._preventDefault);\n                this.$root.addClass('scroll-disabled').css({\n                    paddingRight: this.scrollBar,\n                    overflow: 'hidden'\n                });\n                this.scrollPos = this.$root.scrollTop();\n                this.disabled = true;\n            }\n    \n            enable() {\n                if (!this.disabled) return;\n                this.$root.off('wheel', this._preventDefault);\n                this.$root.removeClass('scroll-disabled').css({\n                    paddingRight: '',\n                    overflow: ''\n                });\n                this.$root.scrollTop(this.scrollPos);\n                this.disabled = false;\n            }\n    \n            measureScrollbar() {\n                var scrollDiv = document.createElement('div');\n                scrollDiv.style.position = 'absolute';\n                scrollDiv.style.top = '-9999px';\n                scrollDiv.style.width = '50px';\n                scrollDiv.style.height = '50px';\n                scrollDiv.style.overflow = 'scroll';\n                this.$root.append(scrollDiv);\n                var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n                this.$root[0].removeChild(scrollDiv);\n                this.scrollBar = scrollbarWidth;\n            }\n        }\n    \n        return function() {\n            if (!_instance) {\n                _instance = new ScrollController();\n            }\n            return _instance;\n        };\n    })();\n    \n\n    /*\n     module GradientText was taken from main page and was adapted\n     for inner pages, without back compatibility\n     */\n    /**\n     * Originally created by AP on 20.03.16.\n     */\n    class GradientText {\n        constructor(el, params = {}) {\n            this._validateParams(params);\n            this.$container = el instanceof $ ? el : $(el);\n            this.params = $.extend(true, {}, GradientText.DEFAULT_PARAMS, params);\n            this.$text = this.$container.find(this.params.textSelector);\n    \n            this._createSvgElement();\n            this._updateSizes();\n    \n            this.snap = Snap(this.$svg[0]);\n            this.rawText = this.$text.html().split('<br>');\n            this.mask = this.snap.text(0, 0, this.rawText).attr({\n                fill: 'white',\n                'class': this.params.textClass\n            });\n    \n            this.colorNormal = this.snap.rect(0, 0, 10, 10).attr({\n                fill: this.params.normalColor\n            });\n            this.colorActive = this.snap.rect(0, 0, 10, 10).attr({\n                fill: 'l()#d82020-#ff5656-#e945ad',\n                fillOpacity: 0\n            });\n            this.colorsGroup = this.snap.group(this.colorNormal, this.colorActive).attr({\n                mask: this.mask\n            });\n    \n            this._bindEvents();\n            this.resize();\n            this.$container.addClass('is-ready');\n        }\n    \n        _createSvgElement() {\n            this.$svg = $(document.createElementNS('http://www.w3.org/2000/svg', 'svg'))\n                .css({\n                    position: 'absolute',\n                    top: 0,\n                    left: 0\n                })\n                .appendTo(this.$container);\n        }\n    \n        _updateSizes() {\n            const _t = this.$text;\n            this.sizes = {\n                w: _t.width(),\n                h: _t.height(),\n                fontSize: parseFloat(_t.css('font-size')),\n                lineHeight: parseFloat(_t.css('line-height'))\n            };\n        }\n    \n        _bindEvents() {\n            this.$container.on('mouseenter', (e) => {\n                this._mouseListener(e);\n            });\n            this.$container.on('mouseleave', (e) => {\n                this._mouseListener(e);\n            });\n            $(window).on('resize', _.throttle(() => {\n                this._updateSizes();\n                this.resize();\n            }, 300));\n        }\n    \n        _validateParams({ textSelector, textClass }) {\n            if (!textSelector && typeof textSelector !== 'string') {\n                throw new Error('\"textSelector\" must be a valid css selector string');\n            }\n            if (!textClass && typeof textClass !== 'string') {\n                throw new Error('\"textClass\" must be a valid css selector string');\n            }\n        }\n    \n        resize() {\n            const magicValue = 0.185;\n            const { w, h, fontSize } = this.sizes;\n            var lineHeightOffset = fontSize * magicValue;\n    \n            this.snap.attr({\n                viewBox: `0 0 ${w} ${h}`,\n                width: `${w}px`,\n                height: `${h}px`\n            });\n            this.mask.selectAll('tspan').forEach((tspan, i) => {\n                tspan.attr({\n                    x: 0,\n                    y: fontSize * ( i + 1 ) - lineHeightOffset\n                });\n            });\n            this.colorNormal.attr({\n                width: w,\n                height: h\n            });\n            this.colorActive.attr({\n                width: w,\n                height: h\n            });\n        }\n    \n        _mouseListener(e) {\n            const { duration } = this.params;\n            switch (e.type) {\n                case 'mouseenter':\n                    this.colorActive.animate({\n                        fillOpacity: 1\n                    }, duration, mina.easein);\n                    break;\n                case 'mouseleave':\n                    this.colorActive.animate({\n                        fillOpacity: 0\n                    }, duration, mina.easeout);\n                    break;\n            }\n        }\n    }\n    \n    GradientText.DEFAULT_PARAMS = {\n        normalColor: '#333333',\n        duration: 500\n    };\n    \n\n    /*\n     these two modules (InputField and LogIn)\n     are the same as on main page, nothing was changed\n     */\n    /**\n     * Created by AP on 25.04.16.\n     */\n    class InputField {\n        /**\n         *\n         * @param {jQuery} $container\n         */\n        constructor ($container) {\n            this.$container = $container;\n            this.$input = $container.find( 'input' );\n            this.$label = $container.find( 'label' );\n            this.$border = $container.find( '.border-line' );\n    \n    \n            this.$input.on( 'focusin', (e) => {\n                this._inputListener(e);\n            } );\n            this.$input.on( 'focusout', (e) => {\n                this._inputListener(e);\n            } );\n        }\n    \n        /**\n         *\n         * @param {jQuery.Event} e\n         * @private\n         */\n        _inputListener (e) {\n            switch (e.type) {\n                case 'focusin': {\n                    this.$label.addClass( 'minified' );\n                    this.$border.addClass( 'active' );\n                    break;\n                }\n                case 'focusout': {\n                    if (this.$input.val().trim().length == 0) {\n                        this.$label.removeClass('minified');\n                    }\n                    this.$border.removeClass( 'active' );\n                    break;\n                }\n            }\n        }\n    }\n    \n    /**\n     * Created by AP on 25.04.16.\n     */\n    class LogIn {\n        /**\n         *\n         * @param $container\n         */\n        constructor($container) {\n            this.$dispatcher = $({});\n            this.$container = $container;\n            this.$inputs = $container.find( '.input-field' );\n            this.$closeBtn = $container.find( '.close-btn' );\n            this.$loginInputsContainer = $container.find( '.mail-n-password' );\n            this.$loginEmailField = $container.find( '#login .input-field_email input' );\n            this.$loginPasswordField = $container.find( '#login .input-field_password input' );\n            this.$signupEmailField = $container.find( '#signup .input-field_email input' );\n            this.$signupPasswordField = $container.find( '#signup .input-field_password input' );\n            this.$helperBtn = $container.find( '.helper-btn' );\n    \n            /** @type {Array.<InputField>} */\n            this.inputs = [];\n    \n            /** @type {String} */\n            this.state = undefined;\n    \n            /** @type {String} */\n            this.signupPasswordDefaultCSS = this.$signupPasswordField.parent().attr('class');\n    \n    \n            var i;\n            for (i = 0; i < this.$inputs.length; i++) {\n                this.inputs.push( new InputField( this.$inputs.eq(i) ) );\n            }\n    \n            this.setState( LogIn.NORMAL_STATE );\n    \n            this.$signupPasswordField.on('input', (e) => {\n                this._passwordFieldListener(e);\n            } );\n            this.$helperBtn.on( 'click', (e) => {\n                this._helperBtnListener(e);\n            } );\n            this.$closeBtn.on( 'click', (e) => {\n                this._closeBtnListener(e);\n            } );\n            this.$container.on( 'mousewheel', (e) => {\n                e.preventDefault();\n                e.stopPropagation();\n            } );\n        }\n    \n        /**\n         * Show component\n         */\n        show () {\n            $( 'body' ).addClass( 'log-in-state' );\n            this.$container.removeClass( 'hidden' );\n        }\n    \n        /**\n         * Hide component\n         */\n        hide () {\n            $( 'body' ).removeClass( 'log-in-state' );\n            this.$container.addClass( 'hidden' );\n        }\n    \n        setState (state) {\n            if (state == this.state) {\n                return;\n            }\n    \n            switch (state) {\n                case LogIn.NORMAL_STATE: {\n                    this.$loginInputsContainer.removeClass( 'recover-pswd-state' );\n                    this.$helperBtn.find( '.helper-btn__content_forgot' ).removeClass( 'hidden' );\n                    this.$helperBtn.find( '.helper-btn__content_back' ).addClass( 'hidden' );\n                    break;\n                }\n                case LogIn.FORGOT_PASSWORD_STATE: {\n                    this.$loginInputsContainer.addClass( 'recover-pswd-state' );\n                    this.$helperBtn.find( '.helper-btn__content_forgot' ).addClass( 'hidden' );\n                    this.$helperBtn.find( '.helper-btn__content_back' ).removeClass( 'hidden' );\n                    break;\n                }\n            }\n            this.state = state;\n        }\n    \n        /**\n         *\n         * @param {jQuery.Event} e\n         * @private\n         */\n        _passwordFieldListener (e) {\n            var result = zxcvbn( this.$signupPasswordField.val() );\n    \n            this.$signupPasswordField.parent().attr( {\n                'class': this.signupPasswordDefaultCSS + ' ' + 'strength_' + result.score\n            } );\n        }\n    \n        /**\n         *\n         * @param {jQuery.Event} e\n         * @private\n         */\n        _helperBtnListener (e) {\n            var targetState;\n    \n            if (this.state == LogIn.NORMAL_STATE) {\n                targetState = LogIn.FORGOT_PASSWORD_STATE;\n            } else if (this.state == LogIn.FORGOT_PASSWORD_STATE) {\n                targetState = LogIn.NORMAL_STATE;\n            }\n            this.setState( targetState );\n        }\n    \n        /**\n         *\n         * @param {jQuery.Event} e\n         * @private\n         */\n        _closeBtnListener (e) {\n            this.hide();\n        }\n    }\n    LogIn.NORMAL_STATE = 'normal_state';\n    LogIn.FORGOT_PASSWORD_STATE = 'forgot_password_state';\n    \n\n    const loginScreen = new LogIn($('.log-in'));\n    const scroll = ScrollController();\n    const controller = new ScrollMagic.Controller({ container: 'body' });\n\n    $('.js-login, .js-register').on('click', (e) => {\n        e.preventDefault();\n        loginScreen.show();\n    });\n\n    $dispatcher.on(Video.EVENTS.beforeOpen, () => {\n        scroll.disable();\n    });\n\n    $dispatcher.on(Video.EVENTS.afterClose, () => {\n        scroll.enable();\n    });\n\n    $('.js-video').each((i, el) => new Video(el));\n    $('.js-gradient').each((i, el) => new GradientText(el, {\n        textSelector: 'h2',\n        textClass: 'h1-like'\n    }));\n\n    new ScrollMagic.Scene({\n        triggerElement: 'body',\n        triggerHook: 'onLeave',\n        offset: 50\n    }).setClassToggle('.header.header--mini', 'is-visible').addTo(controller);\n\n})();\n","class Video {\n    constructor(el, options) {\n        this.$container = el instanceof $ ? el : $(el);\n        this.options = $.extend({}, options, Video._defaults);\n        this.videoId = this.options.videoId || this.$container.data('video-id');\n        this.$content = this.$container.find(this.options.contentSelector);\n        this.$closeBtn = this.$container.find(this.options.closeBtnSelector);\n        this.active = false;\n        Video._initApi(this._init.bind(this));\n    }\n\n    open() {\n        const { duration } = this.options;\n        $dispatcher && $dispatcher.trigger(Video.EVENTS.beforeOpen);\n        this._prevPos = {\n            top: this.$container.offset().top - $(window).scrollTop(),\n            height: this.$container.outerHeight()\n        };\n        this.$iframe.fadeIn(duration);\n        this.$poster.fadeOut(duration);\n        this.$container\n            .addClass('is-active')\n            .css({\n                position: 'fixed',\n                zIndex: '999',\n                width: '100%',\n                top: this._prevPos.top,\n                left: 0\n            }).animate({\n                top: 0,\n                height: window.innerHeight\n            }, duration, () => {\n                this.active = true;\n                this.$container.addClass('is-opened');\n                this.player.playVideo();\n                $dispatcher && $dispatcher.trigger(Video.EVENTS.afterOpen);\n            });\n    }\n\n    close() {\n        const { duration } = this.options;\n        const { top, height } = this._prevPos;\n        $dispatcher && $dispatcher.trigger(Video.EVENTS.beforeClose);\n        this.player.pauseVideo();\n        this.$iframe.fadeOut(duration);\n        this.$poster.fadeIn(duration);\n        this.$container\n            .removeClass('is-opened')\n            .animate({\n                top,\n                height\n            }, duration, () => {\n                this.active = false;\n                this.$container\n                    .removeClass('is-active')\n                    .css({\n                        position: '',\n                        zIndex: '',\n                        width: '',\n                        top: '',\n                        left: '',\n                        height: ''\n                    });\n                $dispatcher && $dispatcher.trigger(Video.EVENTS.afterClose);\n            });\n    }\n\n    _init() {\n        this._initPlayer();\n        this._setPoster();\n    }\n\n    _initPlayer() {\n        const div = $('<div></div>').appendTo(this.$container);\n        this.player = new YT.Player(div[0], {\n            height: '100%',\n            width: '100%',\n            videoId: this.videoId,\n            events: {\n                onReady: () => {\n                    this._bindActions();\n                    this.$container.addClass(this.options.readyClass);\n                }\n            }\n        });\n        this.$iframe = this.$container.find('iframe').hide();\n    }\n\n    _setPoster() {\n        this.$poster = $('<div />')\n            .addClass('video-poster')\n            .css({\n                backgroundImage: `url(http://img.youtube.com/vi/${this.videoId}/maxresdefault.jpg)`\n            }).appendTo(this.$container);\n    }\n\n    _bindActions() {\n        this.$container.on('click', () => {\n            if (!this.active) this.open();\n        });\n\n        this.$closeBtn.on('click', (e) => {\n            e.preventDefault();\n            if (this.active) this.close();\n        });\n    }\n}\n\nVideo._defaults = {\n    duration: 500,\n    contentSelector: '.video-container__content',\n    closeBtnSelector: '.video-container__close',\n    readyClass: 'is-ready',\n    activeClass: 'is-active',\n    openedClass: 'is-opened'\n};\n\nVideo.EVENTS = {\n    beforeOpen: 'video:before-open',\n    afterOpen: 'video:after-open',\n    beforeClose: 'video:before-close',\n    afterClose: 'video:after-close'\n};\nVideo._listeners = [];\nVideo._apiReady = false;\nVideo._apiFetching = false;\n\nVideo._initApi = function(cb = () => {}) {\n    if (this._apiReady) return cb();\n    this._listeners.push(cb);\n\n    if (this._apiFetching) return;\n\n    const script = document.createElement('script');\n    script.src = 'https://www.youtube.com/iframe_api';\n    document.head.appendChild(script);\n    this._apiFetching = true;\n};\n\nVideo._onYouTubeIframeAPIReady = function() {\n    this._apiFetching = false;\n    this._apiReady = true;\n    this._listeners.forEach(func => func());\n    this._listeners = [];\n};\n\nconst _oldCallback = window.onYouTubeIframeAPIReady;\n\nwindow.onYouTubeIframeAPIReady = () => {\n    if (typeof _oldCallback === 'function') _oldCallback();\n    Video._onYouTubeIframeAPIReady();\n};\n","const ScrollController = (() => {\n    let _instance = null;\n\n    class ScrollController {\n        constructor() {\n            this.$root = $('body');\n            this.disabled = false;\n            this.scrollPos = null;\n            this._preventDefault = this._preventDefault.bind(this);\n            this.measureScrollbar();\n        }\n\n        _preventDefault(e) {\n            e.preventDefault();\n        }\n\n        disable() {\n            if (this.disabled) return;\n            this.$root.on('wheel', this._preventDefault);\n            this.$root.addClass('scroll-disabled').css({\n                paddingRight: this.scrollBar,\n                overflow: 'hidden'\n            });\n            this.scrollPos = this.$root.scrollTop();\n            this.disabled = true;\n        }\n\n        enable() {\n            if (!this.disabled) return;\n            this.$root.off('wheel', this._preventDefault);\n            this.$root.removeClass('scroll-disabled').css({\n                paddingRight: '',\n                overflow: ''\n            });\n            this.$root.scrollTop(this.scrollPos);\n            this.disabled = false;\n        }\n\n        measureScrollbar() {\n            var scrollDiv = document.createElement('div');\n            scrollDiv.style.position = 'absolute';\n            scrollDiv.style.top = '-9999px';\n            scrollDiv.style.width = '50px';\n            scrollDiv.style.height = '50px';\n            scrollDiv.style.overflow = 'scroll';\n            this.$root.append(scrollDiv);\n            var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\n            this.$root[0].removeChild(scrollDiv);\n            this.scrollBar = scrollbarWidth;\n        }\n    }\n\n    return function() {\n        if (!_instance) {\n            _instance = new ScrollController();\n        }\n        return _instance;\n    };\n})();\n","/**\n * Originally created by AP on 20.03.16.\n */\nclass GradientText {\n    constructor(el, params = {}) {\n        this._validateParams(params);\n        this.$container = el instanceof $ ? el : $(el);\n        this.params = $.extend(true, {}, GradientText.DEFAULT_PARAMS, params);\n        this.$text = this.$container.find(this.params.textSelector);\n\n        this._createSvgElement();\n        this._updateSizes();\n\n        this.snap = Snap(this.$svg[0]);\n        this.rawText = this.$text.html().split('<br>');\n        this.mask = this.snap.text(0, 0, this.rawText).attr({\n            fill: 'white',\n            'class': this.params.textClass\n        });\n\n        this.colorNormal = this.snap.rect(0, 0, 10, 10).attr({\n            fill: this.params.normalColor\n        });\n        this.colorActive = this.snap.rect(0, 0, 10, 10).attr({\n            fill: 'l()#d82020-#ff5656-#e945ad',\n            fillOpacity: 0\n        });\n        this.colorsGroup = this.snap.group(this.colorNormal, this.colorActive).attr({\n            mask: this.mask\n        });\n\n        this._bindEvents();\n        this.resize();\n        this.$container.addClass('is-ready');\n    }\n\n    _createSvgElement() {\n        this.$svg = $(document.createElementNS('http://www.w3.org/2000/svg', 'svg'))\n            .css({\n                position: 'absolute',\n                top: 0,\n                left: 0\n            })\n            .appendTo(this.$container);\n    }\n\n    _updateSizes() {\n        const _t = this.$text;\n        this.sizes = {\n            w: _t.width(),\n            h: _t.height(),\n            fontSize: parseFloat(_t.css('font-size')),\n            lineHeight: parseFloat(_t.css('line-height'))\n        };\n    }\n\n    _bindEvents() {\n        this.$container.on('mouseenter', (e) => {\n            this._mouseListener(e);\n        });\n        this.$container.on('mouseleave', (e) => {\n            this._mouseListener(e);\n        });\n        $(window).on('resize', _.throttle(() => {\n            this._updateSizes();\n            this.resize();\n        }, 300));\n    }\n\n    _validateParams({ textSelector, textClass }) {\n        if (!textSelector && typeof textSelector !== 'string') {\n            throw new Error('\"textSelector\" must be a valid css selector string');\n        }\n        if (!textClass && typeof textClass !== 'string') {\n            throw new Error('\"textClass\" must be a valid css selector string');\n        }\n    }\n\n    resize() {\n        const magicValue = 0.185;\n        const { w, h, fontSize } = this.sizes;\n        var lineHeightOffset = fontSize * magicValue;\n\n        this.snap.attr({\n            viewBox: `0 0 ${w} ${h}`,\n            width: `${w}px`,\n            height: `${h}px`\n        });\n        this.mask.selectAll('tspan').forEach((tspan, i) => {\n            tspan.attr({\n                x: 0,\n                y: fontSize * ( i + 1 ) - lineHeightOffset\n            });\n        });\n        this.colorNormal.attr({\n            width: w,\n            height: h\n        });\n        this.colorActive.attr({\n            width: w,\n            height: h\n        });\n    }\n\n    _mouseListener(e) {\n        const { duration } = this.params;\n        switch (e.type) {\n            case 'mouseenter':\n                this.colorActive.animate({\n                    fillOpacity: 1\n                }, duration, mina.easein);\n                break;\n            case 'mouseleave':\n                this.colorActive.animate({\n                    fillOpacity: 0\n                }, duration, mina.easeout);\n                break;\n        }\n    }\n}\n\nGradientText.DEFAULT_PARAMS = {\n    normalColor: '#333333',\n    duration: 500\n};\n","/**\n * Created by AP on 25.04.16.\n */\nclass InputField {\n    /**\n     *\n     * @param {jQuery} $container\n     */\n    constructor ($container) {\n        this.$container = $container;\n        this.$input = $container.find( 'input' );\n        this.$label = $container.find( 'label' );\n        this.$border = $container.find( '.border-line' );\n\n\n        this.$input.on( 'focusin', (e) => {\n            this._inputListener(e);\n        } );\n        this.$input.on( 'focusout', (e) => {\n            this._inputListener(e);\n        } );\n    }\n\n    /**\n     *\n     * @param {jQuery.Event} e\n     * @private\n     */\n    _inputListener (e) {\n        switch (e.type) {\n            case 'focusin': {\n                this.$label.addClass( 'minified' );\n                this.$border.addClass( 'active' );\n                break;\n            }\n            case 'focusout': {\n                if (this.$input.val().trim().length == 0) {\n                    this.$label.removeClass('minified');\n                }\n                this.$border.removeClass( 'active' );\n                break;\n            }\n        }\n    }\n}\n","/**\n * Created by AP on 25.04.16.\n */\nclass LogIn {\n    /**\n     *\n     * @param $container\n     */\n    constructor($container) {\n        this.$dispatcher = $({});\n        this.$container = $container;\n        this.$inputs = $container.find( '.input-field' );\n        this.$closeBtn = $container.find( '.close-btn' );\n        this.$loginInputsContainer = $container.find( '.mail-n-password' );\n        this.$loginEmailField = $container.find( '#login .input-field_email input' );\n        this.$loginPasswordField = $container.find( '#login .input-field_password input' );\n        this.$signupEmailField = $container.find( '#signup .input-field_email input' );\n        this.$signupPasswordField = $container.find( '#signup .input-field_password input' );\n        this.$helperBtn = $container.find( '.helper-btn' );\n\n        /** @type {Array.<InputField>} */\n        this.inputs = [];\n\n        /** @type {String} */\n        this.state = undefined;\n\n        /** @type {String} */\n        this.signupPasswordDefaultCSS = this.$signupPasswordField.parent().attr('class');\n\n\n        var i;\n        for (i = 0; i < this.$inputs.length; i++) {\n            this.inputs.push( new InputField( this.$inputs.eq(i) ) );\n        }\n\n        this.setState( LogIn.NORMAL_STATE );\n\n        this.$signupPasswordField.on('input', (e) => {\n            this._passwordFieldListener(e);\n        } );\n        this.$helperBtn.on( 'click', (e) => {\n            this._helperBtnListener(e);\n        } );\n        this.$closeBtn.on( 'click', (e) => {\n            this._closeBtnListener(e);\n        } );\n        this.$container.on( 'mousewheel', (e) => {\n            e.preventDefault();\n            e.stopPropagation();\n        } );\n    }\n\n    /**\n     * Show component\n     */\n    show () {\n        $( 'body' ).addClass( 'log-in-state' );\n        this.$container.removeClass( 'hidden' );\n    }\n\n    /**\n     * Hide component\n     */\n    hide () {\n        $( 'body' ).removeClass( 'log-in-state' );\n        this.$container.addClass( 'hidden' );\n    }\n\n    setState (state) {\n        if (state == this.state) {\n            return;\n        }\n\n        switch (state) {\n            case LogIn.NORMAL_STATE: {\n                this.$loginInputsContainer.removeClass( 'recover-pswd-state' );\n                this.$helperBtn.find( '.helper-btn__content_forgot' ).removeClass( 'hidden' );\n                this.$helperBtn.find( '.helper-btn__content_back' ).addClass( 'hidden' );\n                break;\n            }\n            case LogIn.FORGOT_PASSWORD_STATE: {\n                this.$loginInputsContainer.addClass( 'recover-pswd-state' );\n                this.$helperBtn.find( '.helper-btn__content_forgot' ).addClass( 'hidden' );\n                this.$helperBtn.find( '.helper-btn__content_back' ).removeClass( 'hidden' );\n                break;\n            }\n        }\n        this.state = state;\n    }\n\n    /**\n     *\n     * @param {jQuery.Event} e\n     * @private\n     */\n    _passwordFieldListener (e) {\n        var result = zxcvbn( this.$signupPasswordField.val() );\n\n        this.$signupPasswordField.parent().attr( {\n            'class': this.signupPasswordDefaultCSS + ' ' + 'strength_' + result.score\n        } );\n    }\n\n    /**\n     *\n     * @param {jQuery.Event} e\n     * @private\n     */\n    _helperBtnListener (e) {\n        var targetState;\n\n        if (this.state == LogIn.NORMAL_STATE) {\n            targetState = LogIn.FORGOT_PASSWORD_STATE;\n        } else if (this.state == LogIn.FORGOT_PASSWORD_STATE) {\n            targetState = LogIn.NORMAL_STATE;\n        }\n        this.setState( targetState );\n    }\n\n    /**\n     *\n     * @param {jQuery.Event} e\n     * @private\n     */\n    _closeBtnListener (e) {\n        this.hide();\n    }\n}\nLogIn.NORMAL_STATE = 'normal_state';\nLogIn.FORGOT_PASSWORD_STATE = 'forgot_password_state';\n"],"sourceRoot":"/source/"}